export default {
  abi: [
    {
      inputs: [
        {
          internalType: "address",
          name: "_royaltyReceiver",
          type: "address",
        },
        {
          internalType: "uint96",
          name: "_royaltyFeeNumerator",
          type: "uint96",
        },
        {
          internalType: "address",
          name: "_stablecoinAddress",
          type: "address",
        },
        {
          internalType: "uint256",
          name: "_mintFee",
          type: "uint256",
        },
        {
          internalType: "uint256",
          name: "_maxSupply",
          type: "uint256",
        },
        {
          internalType: "address",
          name: "_devWallet",
          type: "address",
        },
        {
          internalType: "uint256",
          name: "_devMaxMint",
          type: "uint256",
        },
      ],
      stateMutability: "nonpayable",
      type: "constructor",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: "address",
          name: "owner",
          type: "address",
        },
        {
          indexed: true,
          internalType: "address",
          name: "approved",
          type: "address",
        },
        {
          indexed: true,
          internalType: "uint256",
          name: "tokenId",
          type: "uint256",
        },
      ],
      name: "Approval",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: "address",
          name: "owner",
          type: "address",
        },
        {
          indexed: true,
          internalType: "address",
          name: "operator",
          type: "address",
        },
        {
          indexed: false,
          internalType: "bool",
          name: "approved",
          type: "bool",
        },
      ],
      name: "ApprovalForAll",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: "address",
          name: "previousOwner",
          type: "address",
        },
        {
          indexed: true,
          internalType: "address",
          name: "newOwner",
          type: "address",
        },
      ],
      name: "OwnershipTransferred",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: "address",
          name: "from",
          type: "address",
        },
        {
          indexed: true,
          internalType: "address",
          name: "to",
          type: "address",
        },
        {
          indexed: true,
          internalType: "uint256",
          name: "tokenId",
          type: "uint256",
        },
      ],
      name: "Transfer",
      type: "event",
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "to",
          type: "address",
        },
        {
          internalType: "uint256",
          name: "tokenId",
          type: "uint256",
        },
      ],
      name: "approve",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "owner",
          type: "address",
        },
      ],
      name: "balanceOf",
      outputs: [
        {
          internalType: "uint256",
          name: "",
          type: "uint256",
        },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [],
      name: "devMaxMint",
      outputs: [
        {
          internalType: "uint256",
          name: "",
          type: "uint256",
        },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [],
      name: "devWallet",
      outputs: [
        {
          internalType: "address",
          name: "",
          type: "address",
        },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "uint256",
          name: "tokenId",
          type: "uint256",
        },
      ],
      name: "getApproved",
      outputs: [
        {
          internalType: "address",
          name: "",
          type: "address",
        },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "owner",
          type: "address",
        },
        {
          internalType: "address",
          name: "operator",
          type: "address",
        },
      ],
      name: "isApprovedForAll",
      outputs: [
        {
          internalType: "bool",
          name: "",
          type: "bool",
        },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [],
      name: "maxSupply",
      outputs: [
        {
          internalType: "uint256",
          name: "",
          type: "uint256",
        },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [],
      name: "mintFee",
      outputs: [
        {
          internalType: "uint256",
          name: "",
          type: "uint256",
        },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "_recipient",
          type: "address",
        },
        {
          internalType: "uint256",
          name: "quantity",
          type: "uint256",
        },
      ],
      name: "mintMultiple",
      outputs: [
        {
          internalType: "uint256",
          name: "",
          type: "uint256",
        },
      ],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [],
      name: "name",
      outputs: [
        {
          internalType: "string",
          name: "",
          type: "string",
        },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [],
      name: "owner",
      outputs: [
        {
          internalType: "address",
          name: "",
          type: "address",
        },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "uint256",
          name: "tokenId",
          type: "uint256",
        },
      ],
      name: "ownerOf",
      outputs: [
        {
          internalType: "address",
          name: "",
          type: "address",
        },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [],
      name: "renounceOwnership",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "uint256",
          name: "tokenId",
          type: "uint256",
        },
        {
          internalType: "uint256",
          name: "salePrice",
          type: "uint256",
        },
      ],
      name: "royaltyInfo",
      outputs: [
        {
          internalType: "address",
          name: "",
          type: "address",
        },
        {
          internalType: "uint256",
          name: "",
          type: "uint256",
        },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "from",
          type: "address",
        },
        {
          internalType: "address",
          name: "to",
          type: "address",
        },
        {
          internalType: "uint256",
          name: "tokenId",
          type: "uint256",
        },
      ],
      name: "safeTransferFrom",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "from",
          type: "address",
        },
        {
          internalType: "address",
          name: "to",
          type: "address",
        },
        {
          internalType: "uint256",
          name: "tokenId",
          type: "uint256",
        },
        {
          internalType: "bytes",
          name: "data",
          type: "bytes",
        },
      ],
      name: "safeTransferFrom",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "operator",
          type: "address",
        },
        {
          internalType: "bool",
          name: "approved",
          type: "bool",
        },
      ],
      name: "setApprovalForAll",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "_devWallet",
          type: "address",
        },
      ],
      name: "setDevWallet",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "bytes4",
          name: "interfaceId",
          type: "bytes4",
        },
      ],
      name: "supportsInterface",
      outputs: [
        {
          internalType: "bool",
          name: "",
          type: "bool",
        },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [],
      name: "symbol",
      outputs: [
        {
          internalType: "string",
          name: "",
          type: "string",
        },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "uint256",
          name: "tokenId",
          type: "uint256",
        },
      ],
      name: "tokenURI",
      outputs: [
        {
          internalType: "string",
          name: "",
          type: "string",
        },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "from",
          type: "address",
        },
        {
          internalType: "address",
          name: "to",
          type: "address",
        },
        {
          internalType: "uint256",
          name: "tokenId",
          type: "uint256",
        },
      ],
      name: "transferFrom",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "newOwner",
          type: "address",
        },
      ],
      name: "transferOwnership",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [],
      name: "unclaimed",
      outputs: [
        {
          internalType: "uint256",
          name: "",
          type: "uint256",
        },
      ],
      stateMutability: "view",
      type: "function",
    },
  ],
  bytecode: {
    object:
      "0x60806040523480156200001157600080fd5b5060405162001f5138038062001f5183398101604081905262000034916200027d565b60405180604001604052806008815260200167105b19dbd09d5b1b60c21b81525060405180604001604052806008815260200167105311d3d095531360c21b8152508160029081620000879190620003aa565b506003620000968282620003aa565b505050620000b3620000ad6200010560201b60201c565b62000109565b620000bf87876200015b565b600a80546001600160a01b03199081166001600160a01b0397881617909155600994909455600b92909255600c80549093169316929092179055600d5550620004769050565b3390565b600880546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6127106001600160601b0382161115620001cf5760405162461bcd60e51b815260206004820152602a60248201527f455243323938313a20726f79616c7479206665652077696c6c206578636565646044820152692073616c65507269636560b01b60648201526084015b60405180910390fd5b6001600160a01b038216620002275760405162461bcd60e51b815260206004820152601960248201527f455243323938313a20696e76616c6964207265636569766572000000000000006044820152606401620001c6565b604080518082019091526001600160a01b039092168083526001600160601b039091166020909201829052600160a01b90910217600055565b80516001600160a01b03811681146200027857600080fd5b919050565b600080600080600080600060e0888a0312156200029957600080fd5b620002a48862000260565b60208901519097506001600160601b0381168114620002c257600080fd5b9550620002d26040890162000260565b94506060880151935060808801519250620002f060a0890162000260565b915060c0880151905092959891949750929550565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200033057607f821691505b6020821081036200035157634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620003a557600081815260208120601f850160051c81016020861015620003805750805b601f850160051c820191505b81811015620003a1578281556001016200038c565b5050505b505050565b81516001600160401b03811115620003c657620003c662000305565b620003de81620003d784546200031b565b8462000357565b602080601f831160018114620004165760008415620003fd5750858301515b600019600386901b1c1916600185901b178555620003a1565b600085815260208120601f198616915b82811015620004475788860151825594840194600190910190840162000426565b5085821015620004665787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b611acb80620004866000396000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c8063715018a6116100c3578063b88d4fde1161007c578063b88d4fde146102e4578063c87b56dd146102f7578063d5abeb011461030a578063e985e9c514610313578063f2fde38b1461034f578063fcb786991461036257600080fd5b8063715018a61461028a5780638da5cb5b146102925780638ea5220f146102a357806395d89b41146102b6578063a22cb465146102be578063b3fa4a4c146102d157600080fd5b806323b872dd1161011557806323b872dd146102045780632a55205a1461021757806342842e0e146102495780636352211e1461025c578063669416b81461026f57806370a082311461027757600080fd5b806301ffc9a71461015d57806306fdde0314610185578063081812fc1461019a578063095ea7b3146101c557806313966db5146101da5780631f53ac02146101f1575b600080fd5b61017061016b366004611568565b61036b565b60405190151581526020015b60405180910390f35b61018d61037c565b60405161017c91906115d5565b6101ad6101a83660046115e8565b61040e565b6040516001600160a01b03909116815260200161017c565b6101d86101d336600461161d565b610435565b005b6101e360095481565b60405190815260200161017c565b6101d86101ff366004611647565b61054f565b6101d8610212366004611662565b610579565b61022a61022536600461169e565b6105aa565b604080516001600160a01b03909316835260208301919091520161017c565b6101d8610257366004611662565b610656565b6101ad61026a3660046115e8565b610671565b6101e36106d1565b6101e3610285366004611647565b6106ee565b6101d8610774565b6008546001600160a01b03166101ad565b600c546101ad906001600160a01b031681565b61018d610788565b6101d86102cc3660046116ce565b610797565b6101e36102df36600461161d565b6107a6565b6101d86102f236600461171b565b610b3e565b61018d6103053660046115e8565b610b76565b6101e3600b5481565b6101706103213660046117f7565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b6101d861035d366004611647565b610bea565b6101e3600d5481565b600061037682610c63565b92915050565b60606002805461038b9061182a565b80601f01602080910402602001604051908101604052809291908181526020018280546103b79061182a565b80156104045780601f106103d957610100808354040283529160200191610404565b820191906000526020600020905b8154815290600101906020018083116103e757829003601f168201915b5050505050905090565b600061041982610ca3565b506000908152600660205260409020546001600160a01b031690565b600061044082610671565b9050806001600160a01b0316836001600160a01b0316036104b25760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b03821614806104ce57506104ce8133610321565b6105405760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c00000060648201526084016104a9565b61054a8383610d02565b505050565b610557610d70565b600c80546001600160a01b0319166001600160a01b0392909216919091179055565b6105833382610dca565b61059f5760405162461bcd60e51b81526004016104a990611864565b61054a838383610e49565b60008281526001602090815260408083208151808301909252546001600160a01b038116808352600160a01b9091046001600160601b031692820192909252829161061f5750604080518082019091526000546001600160a01b0381168252600160a01b90046001600160601b031660208201525b60208101516000906127109061063e906001600160601b0316876118c7565b61064891906118de565b915196919550909350505050565b61054a83838360405180602001604052806000815250610b3e565b6000818152600460205260408120546001600160a01b0316806103765760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016104a9565b60006106dc600e5490565b600b546106e99190611900565b905090565b60006001600160a01b0382166107585760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b60648201526084016104a9565b506001600160a01b031660009081526005602052604090205490565b61077c610d70565b6107866000610fad565b565b60606003805461038b9061182a565b6107a2338383610fff565b5050565b60006107b06106d1565b826107ba600e5490565b6107c49190611913565b111561081e5760405162461bcd60e51b815260206004820152602360248201527f43616e6e6f74206d696e74206265796f6e642072656d61696e696e6720737570604482015262706c7960e81b60648201526084016104a9565b600c54600d54336001600160a01b03909216821491600091908590610842906106ee565b61084c9190611913565b1115905081801561085a5750805b1561088c5760005b8481101561088657610873866110cd565b508061087e81611926565b915050610862565b50610b35565b60008460095461089c91906118c7565b600a54604051636eb1769f60e11b815233600482015230602482015291925082916001600160a01b039091169063dd62ed3e90604401602060405180830381865afa1580156108ef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610913919061193f565b10156109875760405162461bcd60e51b815260206004820152603a60248201527f53656e646572206e6565647320746f20617070726f766520636f6e747261637460448201527f20746f207370656e6420746f74616c2066656520616d6f756e7400000000000060648201526084016104a9565b8460095461099591906118c7565b600a546040516370a0823160e01b81523360048201526001600160a01b03909116906370a0823190602401602060405180830381865afa1580156109dd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a01919061193f565b1015610a6e5760405162461bcd60e51b815260206004820152603660248201527f53656e64657220646f6573206e6f74206861766520656e6f75676820737461626044820152756c65636f696e20666f72206d696e74696e672066656560501b60648201526084016104a9565b60005b85811015610a9557610a82876110cd565b5080610a8d81611926565b915050610a71565b50600a546001600160a01b03166323b872dd33610aba6008546001600160a01b031690565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604481018490526064016020604051808303816000875af1158015610b0e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b329190611958565b50505b50919392505050565b610b483383610dca565b610b645760405162461bcd60e51b81526004016104a990611864565b610b70848484846110f3565b50505050565b6060610b8182610ca3565b6000610b9860408051602081019091526000815290565b90506000815111610bb85760405180602001604052806000815250610be3565b80610bc284611126565b604051602001610bd3929190611975565b6040516020818303038152906040525b9392505050565b610bf2610d70565b6001600160a01b038116610c575760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104a9565b610c6081610fad565b50565b60006001600160e01b031982166380ac58cd60e01b1480610c9457506001600160e01b03198216635b5e139f60e01b145b806103765750610376826111b9565b6000818152600460205260409020546001600160a01b0316610c605760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016104a9565b600081815260066020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610d3782610671565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6008546001600160a01b031633146107865760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104a9565b600080610dd683610671565b9050806001600160a01b0316846001600160a01b03161480610e1d57506001600160a01b0380821660009081526007602090815260408083209388168352929052205460ff165b80610e415750836001600160a01b0316610e368461040e565b6001600160a01b0316145b949350505050565b826001600160a01b0316610e5c82610671565b6001600160a01b031614610e825760405162461bcd60e51b81526004016104a9906119a4565b6001600160a01b038216610ee45760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016104a9565b826001600160a01b0316610ef782610671565b6001600160a01b031614610f1d5760405162461bcd60e51b81526004016104a9906119a4565b600081815260066020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260058552838620805460001901905590871680865283862080546001019055868652600490945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600880546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b0316036110605760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016104a9565b6001600160a01b03838116600081815260076020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6000806110d9600e5490565b90506110e583826111ee565b610376600e80546001019055565b6110fe848484610e49565b61110a84848484611379565b610b705760405162461bcd60e51b81526004016104a9906119e9565b606060006111338361147a565b600101905060008167ffffffffffffffff81111561115357611153611705565b6040519080825280601f01601f19166020018201604052801561117d576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461118757509392505050565b60006001600160e01b0319821663152a902d60e11b148061037657506301ffc9a760e01b6001600160e01b0319831614610376565b6001600160a01b0382166112445760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016104a9565b6000818152600460205260409020546001600160a01b0316156112a95760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016104a9565b6000818152600460205260409020546001600160a01b03161561130e5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016104a9565b6001600160a01b038216600081815260056020908152604080832080546001019055848352600490915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60006001600160a01b0384163b1561146f57604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906113bd903390899088908890600401611a3b565b6020604051808303816000875af19250505080156113f8575060408051601f3d908101601f191682019092526113f591810190611a78565b60015b611455573d808015611426576040519150601f19603f3d011682016040523d82523d6000602084013e61142b565b606091505b50805160000361144d5760405162461bcd60e51b81526004016104a9906119e9565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610e41565b506001949350505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106114b95772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef810000000083106114e5576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061150357662386f26fc10000830492506010015b6305f5e100831061151b576305f5e100830492506008015b612710831061152f57612710830492506004015b60648310611541576064830492506002015b600a83106103765760010192915050565b6001600160e01b031981168114610c6057600080fd5b60006020828403121561157a57600080fd5b8135610be381611552565b60005b838110156115a0578181015183820152602001611588565b50506000910152565b600081518084526115c1816020860160208601611585565b601f01601f19169290920160200192915050565b602081526000610be360208301846115a9565b6000602082840312156115fa57600080fd5b5035919050565b80356001600160a01b038116811461161857600080fd5b919050565b6000806040838503121561163057600080fd5b61163983611601565b946020939093013593505050565b60006020828403121561165957600080fd5b610be382611601565b60008060006060848603121561167757600080fd5b61168084611601565b925061168e60208501611601565b9150604084013590509250925092565b600080604083850312156116b157600080fd5b50508035926020909101359150565b8015158114610c6057600080fd5b600080604083850312156116e157600080fd5b6116ea83611601565b915060208301356116fa816116c0565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561173157600080fd5b61173a85611601565b935061174860208601611601565b925060408501359150606085013567ffffffffffffffff8082111561176c57600080fd5b818701915087601f83011261178057600080fd5b81358181111561179257611792611705565b604051601f8201601f19908116603f011681019083821181831017156117ba576117ba611705565b816040528281528a60208487010111156117d357600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561180a57600080fd5b61181383611601565b915061182160208401611601565b90509250929050565b600181811c9082168061183e57607f821691505b60208210810361185e57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b8082028115828204841417610376576103766118b1565b6000826118fb57634e487b7160e01b600052601260045260246000fd5b500490565b81810381811115610376576103766118b1565b80820180821115610376576103766118b1565b600060018201611938576119386118b1565b5060010190565b60006020828403121561195157600080fd5b5051919050565b60006020828403121561196a57600080fd5b8151610be3816116c0565b60008351611987818460208801611585565b83519083019061199b818360208801611585565b01949350505050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611a6e908301846115a9565b9695505050505050565b600060208284031215611a8a57600080fd5b8151610be38161155256fea26469706673582212209a96e4e1825412a66852a5db32875e07cd31135e5e973c62fe4e50a15cbb3e5664736f6c63430008110033",
    sourceMap:
      "598:3770:37:-:0;;;1516:526;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1390:113:23;;;;;;;;;;;;;-1:-1:-1;;;1390:113:23;;;;;;;;;;;;;;;;-1:-1:-1;;;1390:113:23;;;1464:5;1456;:13;;;;;;:::i;:::-;-1:-1:-1;1479:7:23;:17;1489:7;1479;:17;:::i;:::-;;1390:113;;936:32:18;955:12;:10;;;:12;;:::i;:::-;936:18;:32::i;:::-;1803:58:37::2;1822:16:::0;1840:20;1803:18:::2;:58::i;:::-;1871:10;:38:::0;;-1:-1:-1;;;;;;1871:38:37;;::::2;-1:-1:-1::0;;;;;1871:38:37;;::::2;;::::0;;;1919:7:::2;:18:::0;;;;1947:9:::2;:22:::0;;;;1979:9:::2;:22:::0;;;;::::2;::::0;::::2;::::0;;;::::2;::::0;;2011:10:::2;:24:::0;-1:-1:-1;598:3770:37;;-1:-1:-1;598:3770:37;640:96:30;719:10;;640:96::o;2426:187:18:-;2518:6;;;-1:-1:-1;;;;;2534:17:18;;;-1:-1:-1;;;;;;2534:17:18;;;;;;;2566:40;;2518:6;;;2534:17;2518:6;;2566:40;;2499:16;;2566:40;2489:124;2426:187;:::o;2730:327:28:-;2457:5;-1:-1:-1;;;;;2832:33:28;;;;2824:88;;;;-1:-1:-1;;;2824:88:28;;3854:2:39;2824:88:28;;;3836:21:39;3893:2;3873:18;;;3866:30;3932:34;3912:18;;;3905:62;-1:-1:-1;;;3983:18:39;;;3976:40;4033:19;;2824:88:28;;;;;;;;;-1:-1:-1;;;;;2930:22:28;;2922:60;;;;-1:-1:-1;;;2922:60:28;;4265:2:39;2922:60:28;;;4247:21:39;4304:2;4284:18;;;4277:30;4343:27;4323:18;;;4316:55;4388:18;;2922:60:28;4063:349:39;2922:60:28;3015:35;;;;;;;;;-1:-1:-1;;;;;3015:35:28;;;;;;-1:-1:-1;;;;;3015:35:28;;;;;;;;;;-1:-1:-1;;;2993:57:28;;;;-1:-1:-1;2993:57:28;2730:327::o;14:177:39:-;93:13;;-1:-1:-1;;;;;135:31:39;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:730::-;319:6;327;335;343;351;359;367;420:3;408:9;399:7;395:23;391:33;388:53;;;437:1;434;427:12;388:53;460:40;490:9;460:40;:::i;:::-;543:2;528:18;;522:25;450:50;;-1:-1:-1;;;;;;576:30:39;;566:41;;556:69;;621:1;618;611:12;556:69;644:5;-1:-1:-1;668:49:39;713:2;698:18;;668:49;:::i;:::-;658:59;;757:2;746:9;742:18;736:25;726:35;;801:3;790:9;786:19;780:26;770:36;;825:50;870:3;859:9;855:19;825:50;:::i;:::-;815:60;;915:3;904:9;900:19;894:26;884:36;;196:730;;;;;;;;;;:::o;931:127::-;992:10;987:3;983:20;980:1;973:31;1023:4;1020:1;1013:15;1047:4;1044:1;1037:15;1063:380;1142:1;1138:12;;;;1185;;;1206:61;;1260:4;1252:6;1248:17;1238:27;;1206:61;1313:2;1305:6;1302:14;1282:18;1279:38;1276:161;;1359:10;1354:3;1350:20;1347:1;1340:31;1394:4;1391:1;1384:15;1422:4;1419:1;1412:15;1276:161;;1063:380;;;:::o;1574:545::-;1676:2;1671:3;1668:11;1665:448;;;1712:1;1737:5;1733:2;1726:17;1782:4;1778:2;1768:19;1852:2;1840:10;1836:19;1833:1;1829:27;1823:4;1819:38;1888:4;1876:10;1873:20;1870:47;;;-1:-1:-1;1911:4:39;1870:47;1966:2;1961:3;1957:12;1954:1;1950:20;1944:4;1940:31;1930:41;;2021:82;2039:2;2032:5;2029:13;2021:82;;;2084:17;;;2065:1;2054:13;2021:82;;;2025:3;;;1665:448;1574:545;;;:::o;2295:1352::-;2415:10;;-1:-1:-1;;;;;2437:30:39;;2434:56;;;2470:18;;:::i;:::-;2499:97;2589:6;2549:38;2581:4;2575:11;2549:38;:::i;:::-;2543:4;2499:97;:::i;:::-;2651:4;;2715:2;2704:14;;2732:1;2727:663;;;;3434:1;3451:6;3448:89;;;-1:-1:-1;3503:19:39;;;3497:26;3448:89;-1:-1:-1;;2252:1:39;2248:11;;;2244:24;2240:29;2230:40;2276:1;2272:11;;;2227:57;3550:81;;2697:944;;2727:663;1521:1;1514:14;;;1558:4;1545:18;;-1:-1:-1;;2763:20:39;;;2881:236;2895:7;2892:1;2889:14;2881:236;;;2984:19;;;2978:26;2963:42;;3076:27;;;;3044:1;3032:14;;;;2911:19;;2881:236;;;2885:3;3145:6;3136:7;3133:19;3130:201;;;3206:19;;;3200:26;-1:-1:-1;;3289:1:39;3285:14;;;3301:3;3281:24;3277:37;3273:42;3258:58;3243:74;;3130:201;-1:-1:-1;;;;;3377:1:39;3361:14;;;3357:22;3344:36;;-1:-1:-1;2295:1352:39:o;4063:349::-;598:3770:37;;;;;;",
    linkReferences: {},
  },
  deployedBytecode: {
    object:
      "",
    sourceMap:
      "598:3770:37:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1115:168:26;;;;;;:::i;:::-;;:::i;:::-;;;565:14:39;;558:22;540:41;;528:2;513:18;1115:168:26;;;;;;;;2471:98:23;;;:::i;:::-;;;;;;;:::i;3935:167::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1697:32:39;;;1679:51;;1667:2;1652:18;3935:167:23;1533:203:39;3468:406:23;;;;;;:::i;:::-;;:::i;:::-;;690:22:37;;;;;;;;;2324:25:39;;;2312:2;2297:18;690:22:37;2178:177:39;2207:100:37;;;;;;:::i;:::-;;:::i;4612:296:23:-;;;;;;:::i;:::-;;:::i;1671:428:28:-;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;3329:32:39;;;3311:51;;3393:2;3378:18;;3371:34;;;;3284:18;1671:428:28;3137:274:39;4974:149:23;;;;;;:::i;:::-;;:::i;2190:219::-;;;;;;:::i;:::-;;:::i;4260:106:37:-;;;:::i;1929:204:23:-;;;;;;:::i;:::-;;:::i;1824:101:18:-;;;:::i;1201:85::-;1273:6;;-1:-1:-1;;;;;1273:6:18;1201:85;;778:24:37;;;;;-1:-1:-1;;;;;778:24:37;;;2633:102:23;;;:::i;4169:153::-;;;;;;:::i;:::-;;:::i;3070:1113:37:-;;;;;;:::i;:::-;;:::i;5189:276:23:-;;;;;;:::i;:::-;;:::i;2801:::-;;;;;;:::i;:::-;;:::i;748:24:37:-;;;;;;4388:162:23;;;;;;:::i;:::-;-1:-1:-1;;;;;4508:25:23;;;4485:4;4508:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4388:162;2074:198:18;;;;;;:::i;:::-;;:::i;808:25:37:-;;;;;;1115:168:26;1217:4;1240:36;1264:11;1240:23;:36::i;:::-;1233:43;1115:168;-1:-1:-1;;1115:168:26:o;2471:98:23:-;2525:13;2557:5;2550:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2471:98;:::o;3935:167::-;4011:7;4030:23;4045:7;4030:14;:23::i;:::-;-1:-1:-1;4071:24:23;;;;:15;:24;;;;;;-1:-1:-1;;;;;4071:24:23;;3935:167::o;3468:406::-;3548:13;3564:23;3579:7;3564:14;:23::i;:::-;3548:39;;3611:5;-1:-1:-1;;;;;3605:11:23;:2;-1:-1:-1;;;;;3605:11:23;;3597:57;;;;-1:-1:-1;;;3597:57:23;;5986:2:39;3597:57:23;;;5968:21:39;6025:2;6005:18;;;5998:30;6064:34;6044:18;;;6037:62;-1:-1:-1;;;6115:18:39;;;6108:31;6156:19;;3597:57:23;;;;;;;;;719:10:30;-1:-1:-1;;;;;3686:21:23;;;;:62;;-1:-1:-1;3711:37:23;3728:5;719:10:30;4388:162:23;:::i;3711:37::-;3665:170;;;;-1:-1:-1;;;3665:170:23;;6388:2:39;3665:170:23;;;6370:21:39;6427:2;6407:18;;;6400:30;6466:34;6446:18;;;6439:62;6537:31;6517:18;;;6510:59;6586:19;;3665:170:23;6186:425:39;3665:170:23;3846:21;3855:2;3859:7;3846:8;:21::i;:::-;3538:336;3468:406;;:::o;2207:100:37:-;1094:13:18;:11;:13::i;:::-;2278:9:37::1;:22:::0;;-1:-1:-1;;;;;;2278:22:37::1;-1:-1:-1::0;;;;;2278:22:37;;;::::1;::::0;;;::::1;::::0;;2207:100::o;4612:296:23:-;4771:41;719:10:30;4804:7:23;4771:18;:41::i;:::-;4763:99;;;;-1:-1:-1;;;4763:99:23;;;;;;;:::i;:::-;4873:28;4883:4;4889:2;4893:7;4873:9;:28::i;1671:428:28:-;1766:7;1823:26;;;:17;:26;;;;;;;;1794:55;;;;;;;;;-1:-1:-1;;;;;1794:55:28;;;;;-1:-1:-1;;;1794:55:28;;;-1:-1:-1;;;;;1794:55:28;;;;;;;;1766:7;;1860:90;;-1:-1:-1;1910:29:28;;;;;;;;;-1:-1:-1;1910:29:28;-1:-1:-1;;;;;1910:29:28;;;;-1:-1:-1;;;1910:29:28;;-1:-1:-1;;;;;1910:29:28;;;;;1860:90;1997:23;;;;1960:21;;2457:5;;1985:35;;-1:-1:-1;;;;;1985:35:28;:9;:35;:::i;:::-;1984:57;;;;:::i;:::-;2060:16;;;;;-1:-1:-1;1671:428:28;;-1:-1:-1;;;;1671:428:28:o;4974:149:23:-;5077:39;5094:4;5100:2;5104:7;5077:39;;;;;;;;;;;;:16;:39::i;2190:219::-;2262:7;6794:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6794:16:23;;2324:56;;;;-1:-1:-1;;;2324:56:23;;7891:2:39;2324:56:23;;;7873:21:39;7930:2;7910:18;;;7903:30;-1:-1:-1;;;7949:18:39;;;7942:54;8013:18;;2324:56:23;7689:348:39;4260:106:37;4302:7;4340:19;:9;918:14:31;;827:112;4340:19:37;4328:9;;:31;;;;:::i;:::-;4321:38;;4260:106;:::o;1929:204:23:-;2001:7;-1:-1:-1;;;;;2028:19:23;;2020:73;;;;-1:-1:-1;;;2020:73:23;;8377:2:39;2020:73:23;;;8359:21:39;8416:2;8396:18;;;8389:30;8455:34;8435:18;;;8428:62;-1:-1:-1;;;8506:18:39;;;8499:39;8555:19;;2020:73:23;8175:405:39;2020:73:23;-1:-1:-1;;;;;;2110:16:23;;;;;:9;:16;;;;;;;1929:204::o;1824:101:18:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;2633:102:23:-;2689:13;2721:7;2714:14;;;;;:::i;4169:153::-;4263:52;719:10:30;4296:8:23;4306;4263:18;:52::i;:::-;4169:153;;:::o;3070:1113:37:-;3148:7;3211:11;:9;:11::i;:::-;3198:8;3176:19;:9;918:14:31;;827:112;3176:19:37;:30;;;;:::i;:::-;3175:47;;3167:95;;;;-1:-1:-1;;;3167:95:37;;8917:2:39;3167:95:37;;;8899:21:39;8956:2;8936:18;;;8929:30;8995:34;8975:18;;;8968:62;-1:-1:-1;;;9046:18:39;;;9039:33;9089:19;;3167:95:37;8715:399:39;3167:95:37;3300:9;;3379:10;;3286;-1:-1:-1;;;;;3300:9:37;;;3286:23;;;3273:10;;3379;3366:8;;3342:21;;:9;:21::i;:::-;:32;;;;:::i;:::-;3341:48;;3319:70;;3404:5;:23;;;;;3413:14;3404:23;3400:751;;;3448:9;3443:88;3467:8;3463:1;:12;3443:88;;;3500:16;3505:10;3500:4;:16::i;:::-;-1:-1:-1;3477:3:37;;;;:::i;:::-;;;;3443:88;;;;3400:751;;;3561:16;3590:8;3580:7;;:18;;;;:::i;:::-;3637:10;;:47;;-1:-1:-1;;;3637:47:37;;3658:10;3637:47;;;9471:34:39;3678:4:37;9521:18:39;;;9514:43;3561:37:37;;-1:-1:-1;3561:37:37;;-1:-1:-1;;;;;3637:10:37;;;;:20;;9406:18:39;;3637:47:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:59;;3612:176;;;;-1:-1:-1;;;3612:176:37;;9959:2:39;3612:176:37;;;9941:21:39;9998:2;9978:18;;;9971:30;10037:34;10017:18;;;10010:62;10108:28;10088:18;;;10081:56;10154:19;;3612:176:37;9757:422:39;3612:176:37;3874:8;3864:7;;:18;;;;:::i;:::-;3827:10;;:32;;-1:-1:-1;;;3827:32:37;;3848:10;3827:32;;;1679:51:39;-1:-1:-1;;;;;3827:10:37;;;;:20;;1652:18:39;;3827:32:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:56;;3802:169;;;;-1:-1:-1;;;3802:169:37;;10386:2:39;3802:169:37;;;10368:21:39;10425:2;10405:18;;;10398:30;10464:34;10444:18;;;10437:62;-1:-1:-1;;;10515:18:39;;;10508:52;10577:19;;3802:169:37;10184:418:39;3802:169:37;3990:9;3985:88;4009:8;4005:1;:12;3985:88;;;4042:16;4047:10;4042:4;:16::i;:::-;-1:-1:-1;4019:3:37;;;;:::i;:::-;;;;3985:88;;;-1:-1:-1;4086:10:37;;-1:-1:-1;;;;;4086:10:37;:23;4110:10;4122:7;1273:6:18;;-1:-1:-1;;;;;1273:6:18;;1201:85;4122:7:37;4086:54;;-1:-1:-1;;;;;;4086:54:37;;;;;;;-1:-1:-1;;;;;10865:15:39;;;4086:54:37;;;10847:34:39;10917:15;;10897:18;;;10890:43;10949:18;;;10942:34;;;10782:18;;4086:54:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3547:604;3400:751;-1:-1:-1;4168:8:37;;3070:1113;-1:-1:-1;;;3070:1113:37:o;5189:276:23:-;5319:41;719:10:30;5352:7:23;5319:18;:41::i;:::-;5311:99;;;;-1:-1:-1;;;5311:99:23;;;;;;;:::i;:::-;5420:38;5434:4;5440:2;5444:7;5453:4;5420:13;:38::i;:::-;5189:276;;;;:::o;2801:::-;2874:13;2899:23;2914:7;2899:14;:23::i;:::-;2933:21;2957:10;3395:9;;;;;;;;;-1:-1:-1;3395:9:23;;;3319:92;2957:10;2933:34;;3008:1;2990:7;2984:21;:25;:86;;;;;;;;;;;;;;;;;3036:7;3045:18;:7;:16;:18::i;:::-;3019:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2984:86;2977:93;2801:276;-1:-1:-1;;;2801:276:23:o;2074:198:18:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2162:22:18;::::1;2154:73;;;::::0;-1:-1:-1;;;2154:73:18;;11940:2:39;2154:73:18::1;::::0;::::1;11922:21:39::0;11979:2;11959:18;;;11952:30;12018:34;11998:18;;;11991:62;-1:-1:-1;;;12069:18:39;;;12062:36;12115:19;;2154:73:18::1;11738:402:39::0;2154:73:18::1;2237:28;2256:8;2237:18;:28::i;:::-;2074:198:::0;:::o;1570:300:23:-;1672:4;-1:-1:-1;;;;;;1707:40:23;;-1:-1:-1;;;1707:40:23;;:104;;-1:-1:-1;;;;;;;1763:48:23;;-1:-1:-1;;;1763:48:23;1707:104;:156;;;;1827:36;1851:11;1827:23;:36::i;13240:133::-;7185:4;6794:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6794:16:23;13313:53;;;;-1:-1:-1;;;13313:53:23;;7891:2:39;13313:53:23;;;7873:21:39;7930:2;7910:18;;;7903:30;-1:-1:-1;;;7949:18:39;;;7942:54;8013:18;;13313:53:23;7689:348:39;12572:171:23;12646:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;12646:29:23;-1:-1:-1;;;;;12646:29:23;;;;;;;;:24;;12699:23;12646:24;12699:14;:23::i;:::-;-1:-1:-1;;;;;12690:46:23;;;;;;;;;;;12572:171;;:::o;1359:130:18:-;1273:6;;-1:-1:-1;;;;;1273:6:18;719:10:30;1422:23:18;1414:68;;;;-1:-1:-1;;;1414:68:18;;12347:2:39;1414:68:18;;;12329:21:39;;;12366:18;;;12359:30;12425:34;12405:18;;;12398:62;12477:18;;1414:68:18;12145:356:39;7404:261:23;7497:4;7513:13;7529:23;7544:7;7529:14;:23::i;:::-;7513:39;;7581:5;-1:-1:-1;;;;;7570:16:23;:7;-1:-1:-1;;;;;7570:16:23;;:52;;;-1:-1:-1;;;;;;4508:25:23;;;4485:4;4508:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;7590:32;7570:87;;;;7650:7;-1:-1:-1;;;;;7626:31:23;:20;7638:7;7626:11;:20::i;:::-;-1:-1:-1;;;;;7626:31:23;;7570:87;7562:96;7404:261;-1:-1:-1;;;;7404:261:23:o;11257:1203::-;11381:4;-1:-1:-1;;;;;11354:31:23;:23;11369:7;11354:14;:23::i;:::-;-1:-1:-1;;;;;11354:31:23;;11346:81;;;;-1:-1:-1;;;11346:81:23;;;;;;;:::i;:::-;-1:-1:-1;;;;;11445:16:23;;11437:65;;;;-1:-1:-1;;;11437:65:23;;13114:2:39;11437:65:23;;;13096:21:39;13153:2;13133:18;;;13126:30;13192:34;13172:18;;;13165:62;-1:-1:-1;;;13243:18:39;;;13236:34;13287:19;;11437:65:23;12912:400:39;11437:65:23;11682:4;-1:-1:-1;;;;;11655:31:23;:23;11670:7;11655:14;:23::i;:::-;-1:-1:-1;;;;;11655:31:23;;11647:81;;;;-1:-1:-1;;;11647:81:23;;;;;;;:::i;:::-;11797:24;;;;:15;:24;;;;;;;;11790:31;;-1:-1:-1;;;;;;11790:31:23;;;;;;-1:-1:-1;;;;;12265:15:23;;;;;;:9;:15;;;;;:20;;-1:-1:-1;;12265:20:23;;;12299:13;;;;;;;;;:18;;11790:31;12299:18;;;12337:16;;;:7;:16;;;;;;:21;;;;;;;;;;12374:27;;11813:7;;12374:27;;;3538:336;3468:406;;:::o;2426:187:18:-;2518:6;;;-1:-1:-1;;;;;2534:17:18;;;-1:-1:-1;;;;;;2534:17:18;;;;;;;2566:40;;2518:6;;;2534:17;2518:6;;2566:40;;2499:16;;2566:40;2489:124;2426:187;:::o;12879:277:23:-;12999:8;-1:-1:-1;;;;;12990:17:23;:5;-1:-1:-1;;;;;12990:17:23;;12982:55;;;;-1:-1:-1;;;12982:55:23;;13519:2:39;12982:55:23;;;13501:21:39;13558:2;13538:18;;;13531:30;13597:27;13577:18;;;13570:55;13642:18;;12982:55:23;13317:349:39;12982:55:23;-1:-1:-1;;;;;13047:25:23;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;13047:46:23;;;;;;;;;;13108:41;;540::39;;;13108::23;;513:18:39;13108:41:23;;;;;;;12879:277;;;:::o;2537:199:37:-;2588:7;2607:13;2623:19;:9;918:14:31;;827:112;2623:19:37;2607:35;;2652:24;2658:10;2670:5;2652;:24::i;:::-;2686:21;:9;1032:19:31;;1050:1;1032:19;;;945:123;6326:267:23;6438:28;6448:4;6454:2;6458:7;6438:9;:28::i;:::-;6484:47;6507:4;6513:2;6517:7;6526:4;6484:22;:47::i;:::-;6476:110;;;;-1:-1:-1;;;6476:110:23;;;;;;;:::i;447:696:32:-;503:13;552:14;569:17;580:5;569:10;:17::i;:::-;589:1;569:21;552:38;;604:20;638:6;627:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;627:18:32;-1:-1:-1;604:41:32;-1:-1:-1;765:28:32;;;781:2;765:28;820:280;-1:-1:-1;;851:5:32;-1:-1:-1;;;985:2:32;974:14;;969:30;851:5;956:44;1044:2;1035:11;;;-1:-1:-1;1064:21:32;820:280;1064:21;-1:-1:-1;1120:6:32;447:696;-1:-1:-1;;;447:696:32:o;1408:213:28:-;1510:4;-1:-1:-1;;;;;;1533:41:28;;-1:-1:-1;;;1533:41:28;;:81;;-1:-1:-1;;;;;;;;;;937:40:33;;;1578:36:28;829:155:33;8925:920:23;-1:-1:-1;;;;;9004:16:23;;8996:61;;;;-1:-1:-1;;;8996:61:23;;14292:2:39;8996:61:23;;;14274:21:39;;;14311:18;;;14304:30;14370:34;14350:18;;;14343:62;14422:18;;8996:61:23;14090:356:39;8996:61:23;7185:4;6794:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6794:16:23;7208:31;9067:58;;;;-1:-1:-1;;;9067:58:23;;14653:2:39;9067:58:23;;;14635:21:39;14692:2;14672:18;;;14665:30;14731;14711:18;;;14704:58;14779:18;;9067:58:23;14451:352:39;9067:58:23;7185:4;6794:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6794:16:23;7208:31;9271:58;;;;-1:-1:-1;;;9271:58:23;;14653:2:39;9271:58:23;;;14635:21:39;14692:2;14672:18;;;14665:30;14731;14711:18;;;14704:58;14779:18;;9271:58:23;14451:352:39;9271:58:23;-1:-1:-1;;;;;9671:13:23;;;;;;:9;:13;;;;;;;;:18;;9688:1;9671:18;;;9710:16;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9710:21:23;;;;;9747:33;9718:7;;9671:13;;9747:33;;9671:13;;9747:33;4169:153;;:::o;13925:831::-;14074:4;-1:-1:-1;;;;;14094:13:23;;1702:19:29;:23;14090:660:23;;14129:71;;-1:-1:-1;;;14129:71:23;;-1:-1:-1;;;;;14129:36:23;;;;;:71;;719:10:30;;14180:4:23;;14186:7;;14195:4;;14129:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14129:71:23;;;;;;;;-1:-1:-1;;14129:71:23;;;;;;;;;;;;:::i;:::-;;;14125:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14367:6;:13;14384:1;14367:18;14363:321;;14409:60;;-1:-1:-1;;;14409:60:23;;;;;;;:::i;14363:321::-;14636:6;14630:13;14621:6;14617:2;14613:15;14606:38;14125:573;-1:-1:-1;;;;;;14250:51:23;-1:-1:-1;;;14250:51:23;;-1:-1:-1;14243:58:23;;14090:660;-1:-1:-1;14735:4:23;13925:831;;;;;;:::o;10139:916:35:-;10192:7;;-1:-1:-1;;;10267:17:35;;10263:103;;-1:-1:-1;;;10304:17:35;;;-1:-1:-1;10349:2:35;10339:12;10263:103;10392:8;10383:5;:17;10379:103;;10429:8;10420:17;;;-1:-1:-1;10465:2:35;10455:12;10379:103;10508:8;10499:5;:17;10495:103;;10545:8;10536:17;;;-1:-1:-1;10581:2:35;10571:12;10495:103;10624:7;10615:5;:16;10611:100;;10660:7;10651:16;;;-1:-1:-1;10695:1:35;10685:11;10611:100;10737:7;10728:5;:16;10724:100;;10773:7;10764:16;;;-1:-1:-1;10808:1:35;10798:11;10724:100;10850:7;10841:5;:16;10837:100;;10886:7;10877:16;;;-1:-1:-1;10921:1:35;10911:11;10837:100;10963:7;10954:5;:16;10950:66;;11000:1;10990:11;11042:6;10139:916;-1:-1:-1;;10139:916:35:o;14:131:39:-;-1:-1:-1;;;;;;88:32:39;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:250::-;677:1;687:113;701:6;698:1;695:13;687:113;;;777:11;;;771:18;758:11;;;751:39;723:2;716:10;687:113;;;-1:-1:-1;;834:1:39;816:16;;809:27;592:250::o;847:271::-;889:3;927:5;921:12;954:6;949:3;942:19;970:76;1039:6;1032:4;1027:3;1023:14;1016:4;1009:5;1005:16;970:76;:::i;:::-;1100:2;1079:15;-1:-1:-1;;1075:29:39;1066:39;;;;1107:4;1062:50;;847:271;-1:-1:-1;;847:271:39:o;1123:220::-;1272:2;1261:9;1254:21;1235:4;1292:45;1333:2;1322:9;1318:18;1310:6;1292:45;:::i;1348:180::-;1407:6;1460:2;1448:9;1439:7;1435:23;1431:32;1428:52;;;1476:1;1473;1466:12;1428:52;-1:-1:-1;1499:23:39;;1348:180;-1:-1:-1;1348:180:39:o;1741:173::-;1809:20;;-1:-1:-1;;;;;1858:31:39;;1848:42;;1838:70;;1904:1;1901;1894:12;1838:70;1741:173;;;:::o;1919:254::-;1987:6;1995;2048:2;2036:9;2027:7;2023:23;2019:32;2016:52;;;2064:1;2061;2054:12;2016:52;2087:29;2106:9;2087:29;:::i;:::-;2077:39;2163:2;2148:18;;;;2135:32;;-1:-1:-1;;;1919:254:39:o;2360:186::-;2419:6;2472:2;2460:9;2451:7;2447:23;2443:32;2440:52;;;2488:1;2485;2478:12;2440:52;2511:29;2530:9;2511:29;:::i;2551:328::-;2628:6;2636;2644;2697:2;2685:9;2676:7;2672:23;2668:32;2665:52;;;2713:1;2710;2703:12;2665:52;2736:29;2755:9;2736:29;:::i;:::-;2726:39;;2784:38;2818:2;2807:9;2803:18;2784:38;:::i;:::-;2774:48;;2869:2;2858:9;2854:18;2841:32;2831:42;;2551:328;;;;;:::o;2884:248::-;2952:6;2960;3013:2;3001:9;2992:7;2988:23;2984:32;2981:52;;;3029:1;3026;3019:12;2981:52;-1:-1:-1;;3052:23:39;;;3122:2;3107:18;;;3094:32;;-1:-1:-1;2884:248:39:o;3416:118::-;3502:5;3495:13;3488:21;3481:5;3478:32;3468:60;;3524:1;3521;3514:12;3539:315;3604:6;3612;3665:2;3653:9;3644:7;3640:23;3636:32;3633:52;;;3681:1;3678;3671:12;3633:52;3704:29;3723:9;3704:29;:::i;:::-;3694:39;;3783:2;3772:9;3768:18;3755:32;3796:28;3818:5;3796:28;:::i;:::-;3843:5;3833:15;;;3539:315;;;;;:::o;3859:127::-;3920:10;3915:3;3911:20;3908:1;3901:31;3951:4;3948:1;3941:15;3975:4;3972:1;3965:15;3991:1138;4086:6;4094;4102;4110;4163:3;4151:9;4142:7;4138:23;4134:33;4131:53;;;4180:1;4177;4170:12;4131:53;4203:29;4222:9;4203:29;:::i;:::-;4193:39;;4251:38;4285:2;4274:9;4270:18;4251:38;:::i;:::-;4241:48;;4336:2;4325:9;4321:18;4308:32;4298:42;;4391:2;4380:9;4376:18;4363:32;4414:18;4455:2;4447:6;4444:14;4441:34;;;4471:1;4468;4461:12;4441:34;4509:6;4498:9;4494:22;4484:32;;4554:7;4547:4;4543:2;4539:13;4535:27;4525:55;;4576:1;4573;4566:12;4525:55;4612:2;4599:16;4634:2;4630;4627:10;4624:36;;;4640:18;;:::i;:::-;4715:2;4709:9;4683:2;4769:13;;-1:-1:-1;;4765:22:39;;;4789:2;4761:31;4757:40;4745:53;;;4813:18;;;4833:22;;;4810:46;4807:72;;;4859:18;;:::i;:::-;4899:10;4895:2;4888:22;4934:2;4926:6;4919:18;4974:7;4969:2;4964;4960;4956:11;4952:20;4949:33;4946:53;;;4995:1;4992;4985:12;4946:53;5051:2;5046;5042;5038:11;5033:2;5025:6;5021:15;5008:46;5096:1;5091:2;5086;5078:6;5074:15;5070:24;5063:35;5117:6;5107:16;;;;;;;3991:1138;;;;;;;:::o;5134:260::-;5202:6;5210;5263:2;5251:9;5242:7;5238:23;5234:32;5231:52;;;5279:1;5276;5269:12;5231:52;5302:29;5321:9;5302:29;:::i;:::-;5292:39;;5350:38;5384:2;5373:9;5369:18;5350:38;:::i;:::-;5340:48;;5134:260;;;;;:::o;5399:380::-;5478:1;5474:12;;;;5521;;;5542:61;;5596:4;5588:6;5584:17;5574:27;;5542:61;5649:2;5641:6;5638:14;5618:18;5615:38;5612:161;;5695:10;5690:3;5686:20;5683:1;5676:31;5730:4;5727:1;5720:15;5758:4;5755:1;5748:15;5612:161;;5399:380;;;:::o;6616:409::-;6818:2;6800:21;;;6857:2;6837:18;;;6830:30;6896:34;6891:2;6876:18;;6869:62;-1:-1:-1;;;6962:2:39;6947:18;;6940:43;7015:3;7000:19;;6616:409::o;7030:127::-;7091:10;7086:3;7082:20;7079:1;7072:31;7122:4;7119:1;7112:15;7146:4;7143:1;7136:15;7162:168;7235:9;;;7266;;7283:15;;;7277:22;;7263:37;7253:71;;7304:18;;:::i;7467:217::-;7507:1;7533;7523:132;;7577:10;7572:3;7568:20;7565:1;7558:31;7612:4;7609:1;7602:15;7640:4;7637:1;7630:15;7523:132;-1:-1:-1;7669:9:39;;7467:217::o;8042:128::-;8109:9;;;8130:11;;;8127:37;;;8144:18;;:::i;8585:125::-;8650:9;;;8671:10;;;8668:36;;;8684:18;;:::i;9119:135::-;9158:3;9179:17;;;9176:43;;9199:18;;:::i;:::-;-1:-1:-1;9246:1:39;9235:13;;9119:135::o;9568:184::-;9638:6;9691:2;9679:9;9670:7;9666:23;9662:32;9659:52;;;9707:1;9704;9697:12;9659:52;-1:-1:-1;9730:16:39;;9568:184;-1:-1:-1;9568:184:39:o;10987:245::-;11054:6;11107:2;11095:9;11086:7;11082:23;11078:32;11075:52;;;11123:1;11120;11113:12;11075:52;11155:9;11149:16;11174:28;11196:5;11174:28;:::i;11237:496::-;11416:3;11454:6;11448:13;11470:66;11529:6;11524:3;11517:4;11509:6;11505:17;11470:66;:::i;:::-;11599:13;;11558:16;;;;11621:70;11599:13;11558:16;11668:4;11656:17;;11621:70;:::i;:::-;11707:20;;11237:496;-1:-1:-1;;;;11237:496:39:o;12506:401::-;12708:2;12690:21;;;12747:2;12727:18;;;12720:30;12786:34;12781:2;12766:18;;12759:62;-1:-1:-1;;;12852:2:39;12837:18;;12830:35;12897:3;12882:19;;12506:401::o;13671:414::-;13873:2;13855:21;;;13912:2;13892:18;;;13885:30;13951:34;13946:2;13931:18;;13924:62;-1:-1:-1;;;14017:2:39;14002:18;;13995:48;14075:3;14060:19;;13671:414::o;14808:489::-;-1:-1:-1;;;;;15077:15:39;;;15059:34;;15129:15;;15124:2;15109:18;;15102:43;15176:2;15161:18;;15154:34;;;15224:3;15219:2;15204:18;;15197:31;;;15002:4;;15245:46;;15271:19;;15263:6;15245:46;:::i;:::-;15237:54;14808:489;-1:-1:-1;;;;;;14808:489:39:o;15302:249::-;15371:6;15424:2;15412:9;15403:7;15399:23;15395:32;15392:52;;;15440:1;15437;15430:12;15392:52;15472:9;15466:16;15491:30;15515:5;15491:30;:::i",
    linkReferences: {},
  },
  methodIdentifiers: {
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "devMaxMint()": "fcb78699",
    "devWallet()": "8ea5220f",
    "getApproved(uint256)": "081812fc",
    "isApprovedForAll(address,address)": "e985e9c5",
    "maxSupply()": "d5abeb01",
    "mintFee()": "13966db5",
    "mintMultiple(address,uint256)": "b3fa4a4c",
    "name()": "06fdde03",
    "owner()": "8da5cb5b",
    "ownerOf(uint256)": "6352211e",
    "renounceOwnership()": "715018a6",
    "royaltyInfo(uint256,uint256)": "2a55205a",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "setApprovalForAll(address,bool)": "a22cb465",
    "setDevWallet(address)": "1f53ac02",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "tokenURI(uint256)": "c87b56dd",
    "transferFrom(address,address,uint256)": "23b872dd",
    "transferOwnership(address)": "f2fde38b",
    "unclaimed()": "669416b8",
  },
  rawMetadata:
    '{"compiler":{"version":"0.8.17+commit.8df45f5f"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"_royaltyReceiver","type":"address"},{"internalType":"uint96","name":"_royaltyFeeNumerator","type":"uint96"},{"internalType":"address","name":"_stablecoinAddress","type":"address"},{"internalType":"uint256","name":"_mintFee","type":"uint256"},{"internalType":"uint256","name":"_maxSupply","type":"uint256"},{"internalType":"address","name":"_devWallet","type":"address"},{"internalType":"uint256","name":"_devMaxMint","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"devMaxMint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"devWallet","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"mintFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_recipient","type":"address"},{"internalType":"uint256","name":"quantity","type":"uint256"}],"name":"mintMultiple","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"salePrice","type":"uint256"}],"name":"royaltyInfo","outputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_devWallet","type":"address"}],"name":"setDevWallet","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unclaimed","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"AlgoBull NFT Minting Contract that implements the following properties: - Fixed Stablecoin fee per 1 mint. - Fixed Supply. - Mint multiple NFTs. - Apply royalties via ERC2981. - Support a dev wallet\'s ability to waive minting fees up to a set amount.","kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"constructor":{"details":"Initializes the AlgoBull NFT minting contract.","params":{"_devMaxMint":"The limit for how many free mints the dev wallet can perform.","_devWallet":"The dev wallet address which is allow to mint for free up to a limit.","_maxSupply":"The capped supply of the mintable NFTs.","_mintFee":"The stablecoin quantity fee charged per minting 1 NFT.","_royaltyFeeNumerator":"The royalty fee in basis points.","_royaltyReceiver":"The account that will receive royalties.","_stablecoinAddress":"The address of stablecoin that will be used for paying fees."}},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"mintMultiple(address,uint256)":{"details":"Mints multiple tokens and sends fee amount to owner. The sender must have an adequate balance of stablecoin to pay the fee. minting should not push the total tokens minted above the max token supply.","params":{"_recipient":"The address of the account that will receive the minted NFT."}},"name()":{"details":"See {IERC721Metadata-name}."},"owner()":{"details":"Returns the address of the current owner."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"royaltyInfo(uint256,uint256)":{"details":"Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of exchange. The royalty amount is denominated and should be paid in that same unit of exchange."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"setDevWallet(address)":{"details":"Allows owner to set a dev wallet.","params":{"_devWallet":"the wallet that will be able to mint without fees up to the devMaxMint."}},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenURI(uint256)":{"details":"See {IERC721Metadata-tokenURI}."},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"unclaimed()":{"details":"Get remaining unclaimed NFTs left to mint."}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"compilationTarget":{"src/AlgoBull.sol":"AlgoBull"},"evmVersion":"london","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":200},"remappings":[":ds-test/=lib/forge-std/lib/ds-test/src/",":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",":forge-std/=lib/forge-std/src/",":openzeppelin-contracts/=lib/openzeppelin-contracts/",":openzeppelin/=lib/openzeppelin-contracts/contracts/"]},"sources":{"lib/openzeppelin-contracts/contracts/access/Ownable.sol":{"keccak256":"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218","license":"MIT","urls":["bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32","dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz"]},"lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol":{"keccak256":"0x3976825a61df20457730b79ad0ac9c8908e3c7978ed9bf090c67137c91256b5c","license":"MIT","urls":["bzz-raw://0f3fe369b6d0e101844b425f1d08e35bf512962d0590b1f80decb8130c9a6890","dweb:/ipfs/QmXCan6wX4qwJkdR1VvsYLeq8JTB2YxRHLucpuXpsKAvzQ"]},"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol":{"keccak256":"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c","license":"MIT","urls":["bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15","dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih"]},"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol":{"keccak256":"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305","license":"MIT","urls":["bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5","dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"]},"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"keccak256":"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca","license":"MIT","urls":["bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd","dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"]},"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol":{"keccak256":"0x2c309e7df9e05e6ce15bedfe74f3c61b467fc37e0fae9eab496acf5ea0bbd7ff","license":"MIT","urls":["bzz-raw://7063b5c98711a98018ba4635ac74cee1c1cfa2ea01099498e062699ed9530005","dweb:/ipfs/QmeJ8rGXkcv7RrqLdAW8PCXPAykxVsddfYY6g5NaTwmRFE"]},"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol":{"keccak256":"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266","license":"MIT","urls":["bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4","dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR"]},"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol":{"keccak256":"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da","license":"MIT","urls":["bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708","dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV"]},"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Royalty.sol":{"keccak256":"0x93d24eea4e6ddbed53ef161567ae62bfd0c3aebb7b48f37e4dbeb7a937108866","license":"MIT","urls":["bzz-raw://d2ed35e16e296fcc3d2311d584e5006ddc188d7d76198e8e750193750b65f9c4","dweb:/ipfs/QmYzLcEgZ4TSBJNPBxhq9BdLQC89w3zyWH88rw3DBy4MxY"]},"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"keccak256":"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9","license":"MIT","urls":["bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146","dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf"]},"lib/openzeppelin-contracts/contracts/token/common/ERC2981.sol":{"keccak256":"0x990a4133f88b07f92724903f42bb25cdaeca0cf255fb48df26568c40e7c919c6","license":"MIT","urls":["bzz-raw://d37620d637eabaa4f4a5deca2d81ee9af18d3c7818acf9091cf15658932a1233","dweb:/ipfs/QmVc3jtXfYFoFyeUwvSo55ZbRt6sVjYfJWafJBPZoAsFvF"]},"lib/openzeppelin-contracts/contracts/utils/Address.sol":{"keccak256":"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa","license":"MIT","urls":["bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931","dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"]},"lib/openzeppelin-contracts/contracts/utils/Context.sol":{"keccak256":"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7","license":"MIT","urls":["bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92","dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"]},"lib/openzeppelin-contracts/contracts/utils/Counters.sol":{"keccak256":"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1","license":"MIT","urls":["bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee","dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu"]},"lib/openzeppelin-contracts/contracts/utils/Strings.sol":{"keccak256":"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0","license":"MIT","urls":["bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f","dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n"]},"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol":{"keccak256":"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b","license":"MIT","urls":["bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d","dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"]},"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol":{"keccak256":"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1","license":"MIT","urls":["bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f","dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"]},"lib/openzeppelin-contracts/contracts/utils/math/Math.sol":{"keccak256":"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3","license":"MIT","urls":["bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c","dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS"]},"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol":{"keccak256":"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc","license":"MIT","urls":["bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7","dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6"]},"src/AlgoBull.sol":{"keccak256":"0x1ee386a2fa13ddb7af7cab2f773c77f88cc01169f1e11d83e8c595f2f33ba5a8","urls":["bzz-raw://3df103365cfaed5f8eb009ec9257fd6d654b826bac48111eb7e058c226307e37","dweb:/ipfs/QmYqBhVJxUyr5DkG4fdxpyHP9TvxMpqTbNMbsxK6pDh7XG"]}},"version":1}',
  metadata: {
    compiler: {
      version: "0.8.17+commit.8df45f5f",
    },
    language: "Solidity",
    output: {
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_royaltyReceiver",
              type: "address",
            },
            {
              internalType: "uint96",
              name: "_royaltyFeeNumerator",
              type: "uint96",
            },
            {
              internalType: "address",
              name: "_stablecoinAddress",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_mintFee",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_maxSupply",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "_devWallet",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_devMaxMint",
              type: "uint256",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
              indexed: true,
            },
            {
              internalType: "address",
              name: "approved",
              type: "address",
              indexed: true,
            },
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
              indexed: true,
            },
          ],
          type: "event",
          name: "Approval",
          anonymous: false,
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
              indexed: true,
            },
            {
              internalType: "address",
              name: "operator",
              type: "address",
              indexed: true,
            },
            {
              internalType: "bool",
              name: "approved",
              type: "bool",
              indexed: false,
            },
          ],
          type: "event",
          name: "ApprovalForAll",
          anonymous: false,
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "previousOwner",
              type: "address",
              indexed: true,
            },
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
              indexed: true,
            },
          ],
          type: "event",
          name: "OwnershipTransferred",
          anonymous: false,
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "from",
              type: "address",
              indexed: true,
            },
            {
              internalType: "address",
              name: "to",
              type: "address",
              indexed: true,
            },
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
              indexed: true,
            },
          ],
          type: "event",
          name: "Transfer",
          anonymous: false,
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
          name: "approve",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
          name: "balanceOf",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
        },
        {
          inputs: [],
          stateMutability: "view",
          type: "function",
          name: "devMaxMint",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
        },
        {
          inputs: [],
          stateMutability: "view",
          type: "function",
          name: "devWallet",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
          name: "getApproved",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              internalType: "address",
              name: "operator",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
          name: "isApprovedForAll",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
        },
        {
          inputs: [],
          stateMutability: "view",
          type: "function",
          name: "maxSupply",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
        },
        {
          inputs: [],
          stateMutability: "view",
          type: "function",
          name: "mintFee",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_recipient",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "quantity",
              type: "uint256",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
          name: "mintMultiple",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
        },
        {
          inputs: [],
          stateMutability: "view",
          type: "function",
          name: "name",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
        },
        {
          inputs: [],
          stateMutability: "view",
          type: "function",
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
          name: "ownerOf",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
        },
        {
          inputs: [],
          stateMutability: "nonpayable",
          type: "function",
          name: "renounceOwnership",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "salePrice",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
          name: "royaltyInfo",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
          name: "safeTransferFrom",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "data",
              type: "bytes",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
          name: "safeTransferFrom",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "operator",
              type: "address",
            },
            {
              internalType: "bool",
              name: "approved",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
          name: "setApprovalForAll",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_devWallet",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
          name: "setDevWallet",
        },
        {
          inputs: [
            {
              internalType: "bytes4",
              name: "interfaceId",
              type: "bytes4",
            },
          ],
          stateMutability: "view",
          type: "function",
          name: "supportsInterface",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
        },
        {
          inputs: [],
          stateMutability: "view",
          type: "function",
          name: "symbol",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
          name: "tokenURI",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
          name: "transferFrom",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
          name: "transferOwnership",
        },
        {
          inputs: [],
          stateMutability: "view",
          type: "function",
          name: "unclaimed",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
        },
      ],
      devdoc: {
        kind: "dev",
        methods: {
          "approve(address,uint256)": {
            details: "See {IERC721-approve}.",
          },
          "balanceOf(address)": {
            details: "See {IERC721-balanceOf}.",
          },
          constructor: {
            details: "Initializes the AlgoBull NFT minting contract.",
            params: {
              _devMaxMint:
                "The limit for how many free mints the dev wallet can perform.",
              _devWallet:
                "The dev wallet address which is allow to mint for free up to a limit.",
              _maxSupply: "The capped supply of the mintable NFTs.",
              _mintFee:
                "The stablecoin quantity fee charged per minting 1 NFT.",
              _royaltyFeeNumerator: "The royalty fee in basis points.",
              _royaltyReceiver: "The account that will receive royalties.",
              _stablecoinAddress:
                "The address of stablecoin that will be used for paying fees.",
            },
          },
          "getApproved(uint256)": {
            details: "See {IERC721-getApproved}.",
          },
          "isApprovedForAll(address,address)": {
            details: "See {IERC721-isApprovedForAll}.",
          },
          "mintMultiple(address,uint256)": {
            details:
              "Mints multiple tokens and sends fee amount to owner. The sender must have an adequate balance of stablecoin to pay the fee. minting should not push the total tokens minted above the max token supply.",
            params: {
              _recipient:
                "The address of the account that will receive the minted NFT.",
            },
          },
          "name()": {
            details: "See {IERC721Metadata-name}.",
          },
          "owner()": {
            details: "Returns the address of the current owner.",
          },
          "ownerOf(uint256)": {
            details: "See {IERC721-ownerOf}.",
          },
          "renounceOwnership()": {
            details:
              "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.",
          },
          "royaltyInfo(uint256,uint256)": {
            details:
              "Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of exchange. The royalty amount is denominated and should be paid in that same unit of exchange.",
          },
          "safeTransferFrom(address,address,uint256)": {
            details: "See {IERC721-safeTransferFrom}.",
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            details: "See {IERC721-safeTransferFrom}.",
          },
          "setApprovalForAll(address,bool)": {
            details: "See {IERC721-setApprovalForAll}.",
          },
          "setDevWallet(address)": {
            details: "Allows owner to set a dev wallet.",
            params: {
              _devWallet:
                "the wallet that will be able to mint without fees up to the devMaxMint.",
            },
          },
          "supportsInterface(bytes4)": {
            details: "See {IERC165-supportsInterface}.",
          },
          "symbol()": {
            details: "See {IERC721Metadata-symbol}.",
          },
          "tokenURI(uint256)": {
            details: "See {IERC721Metadata-tokenURI}.",
          },
          "transferFrom(address,address,uint256)": {
            details: "See {IERC721-transferFrom}.",
          },
          "transferOwnership(address)": {
            details:
              "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
          },
          "unclaimed()": {
            details: "Get remaining unclaimed NFTs left to mint.",
          },
        },
        version: 1,
      },
      userdoc: {
        kind: "user",
        methods: {},
        version: 1,
      },
    },
    settings: {
      remappings: [
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/",
      ],
      optimizer: {
        enabled: true,
        runs: 200,
      },
      metadata: {
        bytecodeHash: "ipfs",
      },
      compilationTarget: {
        "src/AlgoBull.sol": "AlgoBull",
      },
      libraries: {},
    },
    sources: {
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        keccak256:
          "0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218",
        urls: [
          "bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32",
          "dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz",
        ],
        license: "MIT",
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol": {
        keccak256:
          "0x3976825a61df20457730b79ad0ac9c8908e3c7978ed9bf090c67137c91256b5c",
        urls: [
          "bzz-raw://0f3fe369b6d0e101844b425f1d08e35bf512962d0590b1f80decb8130c9a6890",
          "dweb:/ipfs/QmXCan6wX4qwJkdR1VvsYLeq8JTB2YxRHLucpuXpsKAvzQ",
        ],
        license: "MIT",
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        keccak256:
          "0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c",
        urls: [
          "bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15",
          "dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih",
        ],
        license: "MIT",
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        keccak256:
          "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        urls: [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53",
        ],
        license: "MIT",
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol":
        {
          keccak256:
            "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
          urls: [
            "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
            "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8",
          ],
          license: "MIT",
        },
      "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol": {
        keccak256:
          "0x2c309e7df9e05e6ce15bedfe74f3c61b467fc37e0fae9eab496acf5ea0bbd7ff",
        urls: [
          "bzz-raw://7063b5c98711a98018ba4635ac74cee1c1cfa2ea01099498e062699ed9530005",
          "dweb:/ipfs/QmeJ8rGXkcv7RrqLdAW8PCXPAykxVsddfYY6g5NaTwmRFE",
        ],
        license: "MIT",
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        keccak256:
          "0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266",
        urls: [
          "bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4",
          "dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR",
        ],
        license: "MIT",
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol": {
        keccak256:
          "0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da",
        urls: [
          "bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708",
          "dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV",
        ],
        license: "MIT",
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Royalty.sol":
        {
          keccak256:
            "0x93d24eea4e6ddbed53ef161567ae62bfd0c3aebb7b48f37e4dbeb7a937108866",
          urls: [
            "bzz-raw://d2ed35e16e296fcc3d2311d584e5006ddc188d7d76198e8e750193750b65f9c4",
            "dweb:/ipfs/QmYzLcEgZ4TSBJNPBxhq9BdLQC89w3zyWH88rw3DBy4MxY",
          ],
          license: "MIT",
        },
      "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol":
        {
          keccak256:
            "0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9",
          urls: [
            "bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146",
            "dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf",
          ],
          license: "MIT",
        },
      "lib/openzeppelin-contracts/contracts/token/common/ERC2981.sol": {
        keccak256:
          "0x990a4133f88b07f92724903f42bb25cdaeca0cf255fb48df26568c40e7c919c6",
        urls: [
          "bzz-raw://d37620d637eabaa4f4a5deca2d81ee9af18d3c7818acf9091cf15658932a1233",
          "dweb:/ipfs/QmVc3jtXfYFoFyeUwvSo55ZbRt6sVjYfJWafJBPZoAsFvF",
        ],
        license: "MIT",
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        keccak256:
          "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        urls: [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm",
        ],
        license: "MIT",
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        keccak256:
          "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        urls: [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3",
        ],
        license: "MIT",
      },
      "lib/openzeppelin-contracts/contracts/utils/Counters.sol": {
        keccak256:
          "0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1",
        urls: [
          "bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee",
          "dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu",
        ],
        license: "MIT",
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        keccak256:
          "0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0",
        urls: [
          "bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f",
          "dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n",
        ],
        license: "MIT",
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        keccak256:
          "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        urls: [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43",
        ],
        license: "MIT",
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        keccak256:
          "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        urls: [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy",
        ],
        license: "MIT",
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        keccak256:
          "0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3",
        urls: [
          "bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c",
          "dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS",
        ],
        license: "MIT",
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        keccak256:
          "0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc",
        urls: [
          "bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7",
          "dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6",
        ],
        license: "MIT",
      },
      "src/AlgoBull.sol": {
        keccak256:
          "0x1ee386a2fa13ddb7af7cab2f773c77f88cc01169f1e11d83e8c595f2f33ba5a8",
        urls: [
          "bzz-raw://3df103365cfaed5f8eb009ec9257fd6d654b826bac48111eb7e058c226307e37",
          "dweb:/ipfs/QmYqBhVJxUyr5DkG4fdxpyHP9TvxMpqTbNMbsxK6pDh7XG",
        ],
        license: null,
      },
    },
    version: 1,
  },
  ast: {
    absolutePath: "src/AlgoBull.sol",
    id: 46932,
    exportedSymbols: {
      Address: [45336],
      AlgoBull: [46931],
      Context: [45358],
      Counters: [45432],
      ERC165: [45685],
      ERC20: [43571],
      ERC2981: [45006],
      ERC721: [44601],
      ERC721Royalty: [44781],
      IERC165: [45697],
      IERC20: [43649],
      IERC20Metadata: [43674],
      IERC2981: [42984],
      IERC721: [44717],
      IERC721Metadata: [44808],
      IERC721Receiver: [44735],
      Math: [46563],
      Ownable: [42965],
      SignedMath: [46668],
      Strings: [45661],
    },
    nodeType: "SourceUnit",
    src: "0:4369:37",
    nodes: [
      {
        id: 46670,
        nodeType: "PragmaDirective",
        src: "0:23:37",
        nodes: [],
        literals: ["solidity", "^", "0.8", ".0"],
      },
      {
        id: 46671,
        nodeType: "ImportDirective",
        src: "25:65:37",
        nodes: [],
        absolutePath: "lib/openzeppelin-contracts/contracts/utils/Counters.sol",
        file: "lib/openzeppelin-contracts/contracts/utils/Counters.sol",
        nameLocation: "-1:-1:-1",
        scope: 46932,
        sourceUnit: 45433,
        symbolAliases: [],
        unitAlias: "",
      },
      {
        id: 46672,
        nodeType: "ImportDirective",
        src: "91:88:37",
        nodes: [],
        absolutePath:
          "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Royalty.sol",
        file: "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Royalty.sol",
        nameLocation: "-1:-1:-1",
        scope: 46932,
        sourceUnit: 44782,
        symbolAliases: [],
        unitAlias: "",
      },
      {
        id: 46673,
        nodeType: "ImportDirective",
        src: "180:68:37",
        nodes: [],
        absolutePath:
          "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        file: "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        nameLocation: "-1:-1:-1",
        scope: 46932,
        sourceUnit: 43572,
        symbolAliases: [],
        unitAlias: "",
      },
      {
        id: 46674,
        nodeType: "ImportDirective",
        src: "249:65:37",
        nodes: [],
        absolutePath: "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        file: "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        nameLocation: "-1:-1:-1",
        scope: 46932,
        sourceUnit: 42966,
        symbolAliases: [],
        unitAlias: "",
      },
      {
        id: 46931,
        nodeType: "ContractDefinition",
        src: "598:3770:37",
        nodes: [
          {
            id: 46683,
            nodeType: "UsingForDirective",
            src: "648:36:37",
            nodes: [],
            global: false,
            libraryName: {
              id: 46680,
              name: "Counters",
              nameLocations: ["654:8:37"],
              nodeType: "IdentifierPath",
              referencedDeclaration: 45432,
              src: "654:8:37",
            },
            typeName: {
              id: 46682,
              nodeType: "UserDefinedTypeName",
              pathNode: {
                id: 46681,
                name: "Counters.Counter",
                nameLocations: ["667:8:37", "676:7:37"],
                nodeType: "IdentifierPath",
                referencedDeclaration: 45364,
                src: "667:16:37",
              },
              referencedDeclaration: 45364,
              src: "667:16:37",
              typeDescriptions: {
                typeIdentifier: "t_struct$_Counter_$45364_storage_ptr",
                typeString: "struct Counters.Counter",
              },
            },
          },
          {
            id: 46685,
            nodeType: "VariableDeclaration",
            src: "690:22:37",
            nodes: [],
            constant: false,
            functionSelector: "13966db5",
            mutability: "mutable",
            name: "mintFee",
            nameLocation: "705:7:37",
            scope: 46931,
            stateVariable: true,
            storageLocation: "default",
            typeDescriptions: {
              typeIdentifier: "t_uint256",
              typeString: "uint256",
            },
            typeName: {
              id: 46684,
              name: "uint256",
              nodeType: "ElementaryTypeName",
              src: "690:7:37",
              typeDescriptions: {
                typeIdentifier: "t_uint256",
                typeString: "uint256",
              },
            },
            visibility: "public",
          },
          {
            id: 46688,
            nodeType: "VariableDeclaration",
            src: "718:24:37",
            nodes: [],
            constant: false,
            mutability: "mutable",
            name: "stablecoin",
            nameLocation: "732:10:37",
            scope: 46931,
            stateVariable: true,
            storageLocation: "default",
            typeDescriptions: {
              typeIdentifier: "t_contract$_ERC20_$43571",
              typeString: "contract ERC20",
            },
            typeName: {
              id: 46687,
              nodeType: "UserDefinedTypeName",
              pathNode: {
                id: 46686,
                name: "ERC20",
                nameLocations: ["718:5:37"],
                nodeType: "IdentifierPath",
                referencedDeclaration: 43571,
                src: "718:5:37",
              },
              referencedDeclaration: 43571,
              src: "718:5:37",
              typeDescriptions: {
                typeIdentifier: "t_contract$_ERC20_$43571",
                typeString: "contract ERC20",
              },
            },
            visibility: "private",
          },
          {
            id: 46690,
            nodeType: "VariableDeclaration",
            src: "748:24:37",
            nodes: [],
            constant: false,
            functionSelector: "d5abeb01",
            mutability: "mutable",
            name: "maxSupply",
            nameLocation: "763:9:37",
            scope: 46931,
            stateVariable: true,
            storageLocation: "default",
            typeDescriptions: {
              typeIdentifier: "t_uint256",
              typeString: "uint256",
            },
            typeName: {
              id: 46689,
              name: "uint256",
              nodeType: "ElementaryTypeName",
              src: "748:7:37",
              typeDescriptions: {
                typeIdentifier: "t_uint256",
                typeString: "uint256",
              },
            },
            visibility: "public",
          },
          {
            id: 46692,
            nodeType: "VariableDeclaration",
            src: "778:24:37",
            nodes: [],
            constant: false,
            functionSelector: "8ea5220f",
            mutability: "mutable",
            name: "devWallet",
            nameLocation: "793:9:37",
            scope: 46931,
            stateVariable: true,
            storageLocation: "default",
            typeDescriptions: {
              typeIdentifier: "t_address",
              typeString: "address",
            },
            typeName: {
              id: 46691,
              name: "address",
              nodeType: "ElementaryTypeName",
              src: "778:7:37",
              stateMutability: "nonpayable",
              typeDescriptions: {
                typeIdentifier: "t_address",
                typeString: "address",
              },
            },
            visibility: "public",
          },
          {
            id: 46694,
            nodeType: "VariableDeclaration",
            src: "808:25:37",
            nodes: [],
            constant: false,
            functionSelector: "fcb78699",
            mutability: "mutable",
            name: "devMaxMint",
            nameLocation: "823:10:37",
            scope: 46931,
            stateVariable: true,
            storageLocation: "default",
            typeDescriptions: {
              typeIdentifier: "t_uint256",
              typeString: "uint256",
            },
            typeName: {
              id: 46693,
              name: "uint256",
              nodeType: "ElementaryTypeName",
              src: "808:7:37",
              typeDescriptions: {
                typeIdentifier: "t_uint256",
                typeString: "uint256",
              },
            },
            visibility: "public",
          },
          {
            id: 46697,
            nodeType: "VariableDeclaration",
            src: "840:34:37",
            nodes: [],
            constant: false,
            mutability: "mutable",
            name: "_tokenIds",
            nameLocation: "865:9:37",
            scope: 46931,
            stateVariable: true,
            storageLocation: "default",
            typeDescriptions: {
              typeIdentifier: "t_struct$_Counter_$45364_storage",
              typeString: "struct Counters.Counter",
            },
            typeName: {
              id: 46696,
              nodeType: "UserDefinedTypeName",
              pathNode: {
                id: 46695,
                name: "Counters.Counter",
                nameLocations: ["840:8:37", "849:7:37"],
                nodeType: "IdentifierPath",
                referencedDeclaration: 45364,
                src: "840:16:37",
              },
              referencedDeclaration: 45364,
              src: "840:16:37",
              typeDescriptions: {
                typeIdentifier: "t_struct$_Counter_$45364_storage_ptr",
                typeString: "struct Counters.Counter",
              },
            },
            visibility: "private",
          },
          {
            id: 46749,
            nodeType: "FunctionDefinition",
            src: "1516:526:37",
            nodes: [],
            body: {
              id: 46748,
              nodeType: "Block",
              src: "1793:249:37",
              nodes: [],
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        id: 46722,
                        name: "_royaltyReceiver",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 46700,
                        src: "1822:16:37",
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                      {
                        id: 46723,
                        name: "_royaltyFeeNumerator",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 46702,
                        src: "1840:20:37",
                        typeDescriptions: {
                          typeIdentifier: "t_uint96",
                          typeString: "uint96",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                        {
                          typeIdentifier: "t_uint96",
                          typeString: "uint96",
                        },
                      ],
                      id: 46721,
                      name: "_setDefaultRoyalty",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 44947,
                      src: "1803:18:37",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_internal_nonpayable$_t_address_$_t_uint96_$returns$__$",
                        typeString: "function (address,uint96)",
                      },
                    },
                    id: 46724,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: "FunctionCall",
                    src: "1803:58:37",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 46725,
                  nodeType: "ExpressionStatement",
                  src: "1803:58:37",
                },
                {
                  expression: {
                    id: 46730,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 46726,
                      name: "stablecoin",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 46688,
                      src: "1871:10:37",
                      typeDescriptions: {
                        typeIdentifier: "t_contract$_ERC20_$43571",
                        typeString: "contract ERC20",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      arguments: [
                        {
                          id: 46728,
                          name: "_stablecoinAddress",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 46704,
                          src: "1890:18:37",
                          typeDescriptions: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        },
                      ],
                      expression: {
                        argumentTypes: [
                          {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        ],
                        id: 46727,
                        name: "ERC20",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 43571,
                        src: "1884:5:37",
                        typeDescriptions: {
                          typeIdentifier: "t_type$_t_contract$_ERC20_$43571_$",
                          typeString: "type(contract ERC20)",
                        },
                      },
                      id: 46729,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "typeConversion",
                      lValueRequested: false,
                      nameLocations: [],
                      names: [],
                      nodeType: "FunctionCall",
                      src: "1884:25:37",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_contract$_ERC20_$43571",
                        typeString: "contract ERC20",
                      },
                    },
                    src: "1871:38:37",
                    typeDescriptions: {
                      typeIdentifier: "t_contract$_ERC20_$43571",
                      typeString: "contract ERC20",
                    },
                  },
                  id: 46731,
                  nodeType: "ExpressionStatement",
                  src: "1871:38:37",
                },
                {
                  expression: {
                    id: 46734,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 46732,
                      name: "mintFee",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 46685,
                      src: "1919:7:37",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      id: 46733,
                      name: "_mintFee",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 46706,
                      src: "1929:8:37",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    src: "1919:18:37",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  id: 46735,
                  nodeType: "ExpressionStatement",
                  src: "1919:18:37",
                },
                {
                  expression: {
                    id: 46738,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 46736,
                      name: "maxSupply",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 46690,
                      src: "1947:9:37",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      id: 46737,
                      name: "_maxSupply",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 46708,
                      src: "1959:10:37",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    src: "1947:22:37",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  id: 46739,
                  nodeType: "ExpressionStatement",
                  src: "1947:22:37",
                },
                {
                  expression: {
                    id: 46742,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 46740,
                      name: "devWallet",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 46692,
                      src: "1979:9:37",
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      id: 46741,
                      name: "_devWallet",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 46710,
                      src: "1991:10:37",
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    src: "1979:22:37",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  id: 46743,
                  nodeType: "ExpressionStatement",
                  src: "1979:22:37",
                },
                {
                  expression: {
                    id: 46746,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 46744,
                      name: "devMaxMint",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 46694,
                      src: "2011:10:37",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      id: 46745,
                      name: "_devMaxMint",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 46712,
                      src: "2024:11:37",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    src: "2011:24:37",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  id: 46747,
                  nodeType: "ExpressionStatement",
                  src: "2011:24:37",
                },
              ],
            },
            documentation: {
              id: 46698,
              nodeType: "StructuredDocumentation",
              src: "881:630:37",
              text: " @dev Initializes the AlgoBull NFT minting contract.\n @param _royaltyReceiver The account that will receive royalties.\n @param _royaltyFeeNumerator The royalty fee in basis points.\n @param _stablecoinAddress The address of stablecoin that will be used for paying fees.\n @param _mintFee The stablecoin quantity fee charged per minting 1 NFT.\n @param _maxSupply The capped supply of the mintable NFTs.\n @param _devWallet The dev wallet address which is allow to mint for free up to a limit.\n @param _devMaxMint The limit for how many free mints the dev wallet can perform.",
            },
            implemented: true,
            kind: "constructor",
            modifiers: [
              {
                arguments: [
                  {
                    hexValue: "416c676f42756c6c",
                    id: 46715,
                    isConstant: false,
                    isLValue: false,
                    isPure: true,
                    kind: "string",
                    lValueRequested: false,
                    nodeType: "Literal",
                    src: "1759:10:37",
                    typeDescriptions: {
                      typeIdentifier:
                        "t_stringliteral_60b931a6aef7541a4966590dd65a5ad9f046e6816fd0927d0ebdb84a692a6fce",
                      typeString: 'literal_string "AlgoBull"',
                    },
                    value: "AlgoBull",
                  },
                  {
                    hexValue: "414c474f42554c4c",
                    id: 46716,
                    isConstant: false,
                    isLValue: false,
                    isPure: true,
                    kind: "string",
                    lValueRequested: false,
                    nodeType: "Literal",
                    src: "1771:10:37",
                    typeDescriptions: {
                      typeIdentifier:
                        "t_stringliteral_56971c297e1f7d57da8afb7eccce2cf7a818645f1bc723e48a5736c5919f3238",
                      typeString: 'literal_string "ALGOBULL"',
                    },
                    value: "ALGOBULL",
                  },
                ],
                id: 46717,
                kind: "baseConstructorSpecifier",
                modifierName: {
                  id: 46714,
                  name: "ERC721",
                  nameLocations: ["1752:6:37"],
                  nodeType: "IdentifierPath",
                  referencedDeclaration: 44601,
                  src: "1752:6:37",
                },
                nodeType: "ModifierInvocation",
                src: "1752:30:37",
              },
              {
                arguments: [],
                id: 46719,
                kind: "baseConstructorSpecifier",
                modifierName: {
                  id: 46718,
                  name: "Ownable",
                  nameLocations: ["1783:7:37"],
                  nodeType: "IdentifierPath",
                  referencedDeclaration: 42965,
                  src: "1783:7:37",
                },
                nodeType: "ModifierInvocation",
                src: "1783:9:37",
              },
            ],
            name: "",
            nameLocation: "-1:-1:-1",
            parameters: {
              id: 46713,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 46700,
                  mutability: "mutable",
                  name: "_royaltyReceiver",
                  nameLocation: "1545:16:37",
                  nodeType: "VariableDeclaration",
                  scope: 46749,
                  src: "1537:24:37",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                  typeName: {
                    id: 46699,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "1537:7:37",
                    stateMutability: "nonpayable",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 46702,
                  mutability: "mutable",
                  name: "_royaltyFeeNumerator",
                  nameLocation: "1578:20:37",
                  nodeType: "VariableDeclaration",
                  scope: 46749,
                  src: "1571:27:37",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint96",
                    typeString: "uint96",
                  },
                  typeName: {
                    id: 46701,
                    name: "uint96",
                    nodeType: "ElementaryTypeName",
                    src: "1571:6:37",
                    typeDescriptions: {
                      typeIdentifier: "t_uint96",
                      typeString: "uint96",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 46704,
                  mutability: "mutable",
                  name: "_stablecoinAddress",
                  nameLocation: "1616:18:37",
                  nodeType: "VariableDeclaration",
                  scope: 46749,
                  src: "1608:26:37",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                  typeName: {
                    id: 46703,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "1608:7:37",
                    stateMutability: "nonpayable",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 46706,
                  mutability: "mutable",
                  name: "_mintFee",
                  nameLocation: "1652:8:37",
                  nodeType: "VariableDeclaration",
                  scope: 46749,
                  src: "1644:16:37",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 46705,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "1644:7:37",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 46708,
                  mutability: "mutable",
                  name: "_maxSupply",
                  nameLocation: "1678:10:37",
                  nodeType: "VariableDeclaration",
                  scope: 46749,
                  src: "1670:18:37",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 46707,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "1670:7:37",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 46710,
                  mutability: "mutable",
                  name: "_devWallet",
                  nameLocation: "1706:10:37",
                  nodeType: "VariableDeclaration",
                  scope: 46749,
                  src: "1698:18:37",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                  typeName: {
                    id: 46709,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "1698:7:37",
                    stateMutability: "nonpayable",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 46712,
                  mutability: "mutable",
                  name: "_devMaxMint",
                  nameLocation: "1734:11:37",
                  nodeType: "VariableDeclaration",
                  scope: 46749,
                  src: "1726:19:37",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 46711,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "1726:7:37",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "1527:224:37",
            },
            returnParameters: {
              id: 46720,
              nodeType: "ParameterList",
              parameters: [],
              src: "1793:0:37",
            },
            scope: 46931,
            stateMutability: "nonpayable",
            virtual: false,
            visibility: "public",
          },
          {
            id: 46762,
            nodeType: "FunctionDefinition",
            src: "2207:100:37",
            nodes: [],
            body: {
              id: 46761,
              nodeType: "Block",
              src: "2268:39:37",
              nodes: [],
              statements: [
                {
                  expression: {
                    id: 46759,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 46757,
                      name: "devWallet",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 46692,
                      src: "2278:9:37",
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      id: 46758,
                      name: "_devWallet",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 46752,
                      src: "2290:10:37",
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    src: "2278:22:37",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  id: 46760,
                  nodeType: "ExpressionStatement",
                  src: "2278:22:37",
                },
              ],
            },
            documentation: {
              id: 46750,
              nodeType: "StructuredDocumentation",
              src: "2048:154:37",
              text: " @dev Allows owner to set a dev wallet.\n @param _devWallet the wallet that will be able to mint without fees up to the devMaxMint.",
            },
            functionSelector: "1f53ac02",
            implemented: true,
            kind: "function",
            modifiers: [
              {
                id: 46755,
                kind: "modifierInvocation",
                modifierName: {
                  id: 46754,
                  name: "onlyOwner",
                  nameLocations: ["2258:9:37"],
                  nodeType: "IdentifierPath",
                  referencedDeclaration: 42884,
                  src: "2258:9:37",
                },
                nodeType: "ModifierInvocation",
                src: "2258:9:37",
              },
            ],
            name: "setDevWallet",
            nameLocation: "2216:12:37",
            parameters: {
              id: 46753,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 46752,
                  mutability: "mutable",
                  name: "_devWallet",
                  nameLocation: "2237:10:37",
                  nodeType: "VariableDeclaration",
                  scope: 46762,
                  src: "2229:18:37",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                  typeName: {
                    id: 46751,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "2229:7:37",
                    stateMutability: "nonpayable",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "2228:20:37",
            },
            returnParameters: {
              id: 46756,
              nodeType: "ParameterList",
              parameters: [],
              src: "2268:0:37",
            },
            scope: 46931,
            stateMutability: "nonpayable",
            virtual: false,
            visibility: "external",
          },
          {
            id: 46789,
            nodeType: "FunctionDefinition",
            src: "2537:199:37",
            nodes: [],
            body: {
              id: 46788,
              nodeType: "Block",
              src: "2597:139:37",
              nodes: [],
              statements: [
                {
                  assignments: [46771],
                  declarations: [
                    {
                      constant: false,
                      id: 46771,
                      mutability: "mutable",
                      name: "newID",
                      nameLocation: "2615:5:37",
                      nodeType: "VariableDeclaration",
                      scope: 46788,
                      src: "2607:13:37",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      typeName: {
                        id: 46770,
                        name: "uint256",
                        nodeType: "ElementaryTypeName",
                        src: "2607:7:37",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 46775,
                  initialValue: {
                    arguments: [],
                    expression: {
                      argumentTypes: [],
                      expression: {
                        id: 46772,
                        name: "_tokenIds",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 46697,
                        src: "2623:9:37",
                        typeDescriptions: {
                          typeIdentifier: "t_struct$_Counter_$45364_storage",
                          typeString: "struct Counters.Counter storage ref",
                        },
                      },
                      id: 46773,
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: false,
                      memberLocation: "2633:7:37",
                      memberName: "current",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 45376,
                      src: "2623:17:37",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_internal_view$_t_struct$_Counter_$45364_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$45364_storage_ptr_$",
                        typeString:
                          "function (struct Counters.Counter storage pointer) view returns (uint256)",
                      },
                    },
                    id: 46774,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: "FunctionCall",
                    src: "2623:19:37",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "2607:35:37",
                },
                {
                  expression: {
                    arguments: [
                      {
                        id: 46777,
                        name: "_recipient",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 46765,
                        src: "2658:10:37",
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                      {
                        id: 46778,
                        name: "newID",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 46771,
                        src: "2670:5:37",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      ],
                      id: 46776,
                      name: "_mint",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 44275,
                      src: "2652:5:37",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        typeString: "function (address,uint256)",
                      },
                    },
                    id: 46779,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: "FunctionCall",
                    src: "2652:24:37",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 46780,
                  nodeType: "ExpressionStatement",
                  src: "2652:24:37",
                },
                {
                  expression: {
                    arguments: [],
                    expression: {
                      argumentTypes: [],
                      expression: {
                        id: 46781,
                        name: "_tokenIds",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 46697,
                        src: "2686:9:37",
                        typeDescriptions: {
                          typeIdentifier: "t_struct$_Counter_$45364_storage",
                          typeString: "struct Counters.Counter storage ref",
                        },
                      },
                      id: 46783,
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: false,
                      memberLocation: "2696:9:37",
                      memberName: "increment",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 45390,
                      src: "2686:19:37",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_internal_nonpayable$_t_struct$_Counter_$45364_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$45364_storage_ptr_$",
                        typeString:
                          "function (struct Counters.Counter storage pointer)",
                      },
                    },
                    id: 46784,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: "FunctionCall",
                    src: "2686:21:37",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 46785,
                  nodeType: "ExpressionStatement",
                  src: "2686:21:37",
                },
                {
                  expression: {
                    id: 46786,
                    name: "newID",
                    nodeType: "Identifier",
                    overloadedDeclarations: [],
                    referencedDeclaration: 46771,
                    src: "2724:5:37",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  functionReturnParameters: 46769,
                  id: 46787,
                  nodeType: "Return",
                  src: "2717:12:37",
                },
              ],
            },
            documentation: {
              id: 46763,
              nodeType: "StructuredDocumentation",
              src: "2313:219:37",
              text: " @dev Mints a token.\n This function is designed to only be used by contract level functions.\n @param _recipient The address of the account that will receives the minted NFT and pay the fee.",
            },
            implemented: true,
            kind: "function",
            modifiers: [],
            name: "mint",
            nameLocation: "2546:4:37",
            parameters: {
              id: 46766,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 46765,
                  mutability: "mutable",
                  name: "_recipient",
                  nameLocation: "2559:10:37",
                  nodeType: "VariableDeclaration",
                  scope: 46789,
                  src: "2551:18:37",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                  typeName: {
                    id: 46764,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "2551:7:37",
                    stateMutability: "nonpayable",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "2550:20:37",
            },
            returnParameters: {
              id: 46769,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 46768,
                  mutability: "mutable",
                  name: "",
                  nameLocation: "-1:-1:-1",
                  nodeType: "VariableDeclaration",
                  scope: 46789,
                  src: "2588:7:37",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 46767,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "2588:7:37",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "2587:9:37",
            },
            scope: 46931,
            stateMutability: "nonpayable",
            virtual: false,
            visibility: "private",
          },
          {
            id: 46917,
            nodeType: "FunctionDefinition",
            src: "3070:1113:37",
            nodes: [],
            body: {
              id: 46916,
              nodeType: "Block",
              src: "3157:1026:37",
              nodes: [],
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        commonType: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                        id: 46808,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        leftExpression: {
                          components: [
                            {
                              commonType: {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                              id: 46804,
                              isConstant: false,
                              isLValue: false,
                              isPure: false,
                              lValueRequested: false,
                              leftExpression: {
                                arguments: [],
                                expression: {
                                  argumentTypes: [],
                                  expression: {
                                    id: 46800,
                                    name: "_tokenIds",
                                    nodeType: "Identifier",
                                    overloadedDeclarations: [],
                                    referencedDeclaration: 46697,
                                    src: "3176:9:37",
                                    typeDescriptions: {
                                      typeIdentifier:
                                        "t_struct$_Counter_$45364_storage",
                                      typeString:
                                        "struct Counters.Counter storage ref",
                                    },
                                  },
                                  id: 46801,
                                  isConstant: false,
                                  isLValue: true,
                                  isPure: false,
                                  lValueRequested: false,
                                  memberLocation: "3186:7:37",
                                  memberName: "current",
                                  nodeType: "MemberAccess",
                                  referencedDeclaration: 45376,
                                  src: "3176:17:37",
                                  typeDescriptions: {
                                    typeIdentifier:
                                      "t_function_internal_view$_t_struct$_Counter_$45364_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$45364_storage_ptr_$",
                                    typeString:
                                      "function (struct Counters.Counter storage pointer) view returns (uint256)",
                                  },
                                },
                                id: 46802,
                                isConstant: false,
                                isLValue: false,
                                isPure: false,
                                kind: "functionCall",
                                lValueRequested: false,
                                nameLocations: [],
                                names: [],
                                nodeType: "FunctionCall",
                                src: "3176:19:37",
                                tryCall: false,
                                typeDescriptions: {
                                  typeIdentifier: "t_uint256",
                                  typeString: "uint256",
                                },
                              },
                              nodeType: "BinaryOperation",
                              operator: "+",
                              rightExpression: {
                                id: 46803,
                                name: "quantity",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: 46794,
                                src: "3198:8:37",
                                typeDescriptions: {
                                  typeIdentifier: "t_uint256",
                                  typeString: "uint256",
                                },
                              },
                              src: "3176:30:37",
                              typeDescriptions: {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                            },
                          ],
                          id: 46805,
                          isConstant: false,
                          isInlineArray: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          nodeType: "TupleExpression",
                          src: "3175:32:37",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        nodeType: "BinaryOperation",
                        operator: "<=",
                        rightExpression: {
                          arguments: [],
                          expression: {
                            argumentTypes: [],
                            id: 46806,
                            name: "unclaimed",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 46930,
                            src: "3211:9:37",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_function_internal_view$__$returns$_t_uint256_$",
                              typeString: "function () view returns (uint256)",
                            },
                          },
                          id: 46807,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          kind: "functionCall",
                          lValueRequested: false,
                          nameLocations: [],
                          names: [],
                          nodeType: "FunctionCall",
                          src: "3211:11:37",
                          tryCall: false,
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        src: "3175:47:37",
                        typeDescriptions: {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                      },
                      {
                        hexValue:
                          "43616e6e6f74206d696e74206265796f6e642072656d61696e696e6720737570706c79",
                        id: 46809,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: "string",
                        lValueRequested: false,
                        nodeType: "Literal",
                        src: "3224:37:37",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_stringliteral_126409ad6c97b72d10a72840135140542ad62c3339c4a02601e56fc11c2a1c06",
                          typeString:
                            'literal_string "Cannot mint beyond remaining supply"',
                        },
                        value: "Cannot mint beyond remaining supply",
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                        {
                          typeIdentifier:
                            "t_stringliteral_126409ad6c97b72d10a72840135140542ad62c3339c4a02601e56fc11c2a1c06",
                          typeString:
                            'literal_string "Cannot mint beyond remaining supply"',
                        },
                      ],
                      id: 46799,
                      name: "require",
                      nodeType: "Identifier",
                      overloadedDeclarations: [-18, -18],
                      referencedDeclaration: -18,
                      src: "3167:7:37",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        typeString: "function (bool,string memory) pure",
                      },
                    },
                    id: 46810,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: "FunctionCall",
                    src: "3167:95:37",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 46811,
                  nodeType: "ExpressionStatement",
                  src: "3167:95:37",
                },
                {
                  assignments: [46813],
                  declarations: [
                    {
                      constant: false,
                      id: 46813,
                      mutability: "mutable",
                      name: "isDev",
                      nameLocation: "3278:5:37",
                      nodeType: "VariableDeclaration",
                      scope: 46916,
                      src: "3273:10:37",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_bool",
                        typeString: "bool",
                      },
                      typeName: {
                        id: 46812,
                        name: "bool",
                        nodeType: "ElementaryTypeName",
                        src: "3273:4:37",
                        typeDescriptions: {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 46818,
                  initialValue: {
                    commonType: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                    id: 46817,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      expression: {
                        id: 46814,
                        name: "msg",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: -15,
                        src: "3286:3:37",
                        typeDescriptions: {
                          typeIdentifier: "t_magic_message",
                          typeString: "msg",
                        },
                      },
                      id: 46815,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberLocation: "3290:6:37",
                      memberName: "sender",
                      nodeType: "MemberAccess",
                      src: "3286:10:37",
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    nodeType: "BinaryOperation",
                    operator: "==",
                    rightExpression: {
                      id: 46816,
                      name: "devWallet",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 46692,
                      src: "3300:9:37",
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    src: "3286:23:37",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "3273:36:37",
                },
                {
                  assignments: [46820],
                  declarations: [
                    {
                      constant: false,
                      id: 46820,
                      mutability: "mutable",
                      name: "devCanMintFree",
                      nameLocation: "3324:14:37",
                      nodeType: "VariableDeclaration",
                      scope: 46916,
                      src: "3319:19:37",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_bool",
                        typeString: "bool",
                      },
                      typeName: {
                        id: 46819,
                        name: "bool",
                        nodeType: "ElementaryTypeName",
                        src: "3319:4:37",
                        typeDescriptions: {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 46830,
                  initialValue: {
                    commonType: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    id: 46829,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      components: [
                        {
                          commonType: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                          id: 46826,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftExpression: {
                            arguments: [
                              {
                                expression: {
                                  id: 46822,
                                  name: "msg",
                                  nodeType: "Identifier",
                                  overloadedDeclarations: [],
                                  referencedDeclaration: -15,
                                  src: "3352:3:37",
                                  typeDescriptions: {
                                    typeIdentifier: "t_magic_message",
                                    typeString: "msg",
                                  },
                                },
                                id: 46823,
                                isConstant: false,
                                isLValue: false,
                                isPure: false,
                                lValueRequested: false,
                                memberLocation: "3356:6:37",
                                memberName: "sender",
                                nodeType: "MemberAccess",
                                src: "3352:10:37",
                                typeDescriptions: {
                                  typeIdentifier: "t_address",
                                  typeString: "address",
                                },
                              },
                            ],
                            expression: {
                              argumentTypes: [
                                {
                                  typeIdentifier: "t_address",
                                  typeString: "address",
                                },
                              ],
                              id: 46821,
                              name: "balanceOf",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 43792,
                              src: "3342:9:37",
                              typeDescriptions: {
                                typeIdentifier:
                                  "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                typeString:
                                  "function (address) view returns (uint256)",
                              },
                            },
                            id: 46824,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            kind: "functionCall",
                            lValueRequested: false,
                            nameLocations: [],
                            names: [],
                            nodeType: "FunctionCall",
                            src: "3342:21:37",
                            tryCall: false,
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          nodeType: "BinaryOperation",
                          operator: "+",
                          rightExpression: {
                            id: 46825,
                            name: "quantity",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 46794,
                            src: "3366:8:37",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          src: "3342:32:37",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                      ],
                      id: 46827,
                      isConstant: false,
                      isInlineArray: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      nodeType: "TupleExpression",
                      src: "3341:34:37",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "BinaryOperation",
                    operator: "<=",
                    rightExpression: {
                      id: 46828,
                      name: "devMaxMint",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 46694,
                      src: "3379:10:37",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    src: "3341:48:37",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "3319:70:37",
                },
                {
                  condition: {
                    commonType: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                    id: 46833,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      id: 46831,
                      name: "isDev",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 46813,
                      src: "3404:5:37",
                      typeDescriptions: {
                        typeIdentifier: "t_bool",
                        typeString: "bool",
                      },
                    },
                    nodeType: "BinaryOperation",
                    operator: "&&",
                    rightExpression: {
                      id: 46832,
                      name: "devCanMintFree",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 46820,
                      src: "3413:14:37",
                      typeDescriptions: {
                        typeIdentifier: "t_bool",
                        typeString: "bool",
                      },
                    },
                    src: "3404:23:37",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  falseBody: {
                    id: 46912,
                    nodeType: "Block",
                    src: "3547:604:37",
                    statements: [
                      {
                        assignments: [46852],
                        declarations: [
                          {
                            constant: false,
                            id: 46852,
                            mutability: "mutable",
                            name: "totalFee",
                            nameLocation: "3569:8:37",
                            nodeType: "VariableDeclaration",
                            scope: 46912,
                            src: "3561:16:37",
                            stateVariable: false,
                            storageLocation: "default",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                            typeName: {
                              id: 46851,
                              name: "uint256",
                              nodeType: "ElementaryTypeName",
                              src: "3561:7:37",
                              typeDescriptions: {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                            },
                            visibility: "internal",
                          },
                        ],
                        id: 46856,
                        initialValue: {
                          commonType: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                          id: 46855,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftExpression: {
                            id: 46853,
                            name: "mintFee",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 46685,
                            src: "3580:7:37",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          nodeType: "BinaryOperation",
                          operator: "*",
                          rightExpression: {
                            id: 46854,
                            name: "quantity",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 46794,
                            src: "3590:8:37",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          src: "3580:18:37",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        nodeType: "VariableDeclarationStatement",
                        src: "3561:37:37",
                      },
                      {
                        expression: {
                          arguments: [
                            {
                              commonType: {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                              id: 46868,
                              isConstant: false,
                              isLValue: false,
                              isPure: false,
                              lValueRequested: false,
                              leftExpression: {
                                arguments: [
                                  {
                                    expression: {
                                      id: 46860,
                                      name: "msg",
                                      nodeType: "Identifier",
                                      overloadedDeclarations: [],
                                      referencedDeclaration: -15,
                                      src: "3658:3:37",
                                      typeDescriptions: {
                                        typeIdentifier: "t_magic_message",
                                        typeString: "msg",
                                      },
                                    },
                                    id: 46861,
                                    isConstant: false,
                                    isLValue: false,
                                    isPure: false,
                                    lValueRequested: false,
                                    memberLocation: "3662:6:37",
                                    memberName: "sender",
                                    nodeType: "MemberAccess",
                                    src: "3658:10:37",
                                    typeDescriptions: {
                                      typeIdentifier: "t_address",
                                      typeString: "address",
                                    },
                                  },
                                  {
                                    arguments: [
                                      {
                                        id: 46864,
                                        name: "this",
                                        nodeType: "Identifier",
                                        overloadedDeclarations: [],
                                        referencedDeclaration: -28,
                                        src: "3678:4:37",
                                        typeDescriptions: {
                                          typeIdentifier:
                                            "t_contract$_AlgoBull_$46931",
                                          typeString: "contract AlgoBull",
                                        },
                                      },
                                    ],
                                    expression: {
                                      argumentTypes: [
                                        {
                                          typeIdentifier:
                                            "t_contract$_AlgoBull_$46931",
                                          typeString: "contract AlgoBull",
                                        },
                                      ],
                                      id: 46863,
                                      isConstant: false,
                                      isLValue: false,
                                      isPure: true,
                                      lValueRequested: false,
                                      nodeType: "ElementaryTypeNameExpression",
                                      src: "3670:7:37",
                                      typeDescriptions: {
                                        typeIdentifier: "t_type$_t_address_$",
                                        typeString: "type(address)",
                                      },
                                      typeName: {
                                        id: 46862,
                                        name: "address",
                                        nodeType: "ElementaryTypeName",
                                        src: "3670:7:37",
                                        typeDescriptions: {},
                                      },
                                    },
                                    id: 46865,
                                    isConstant: false,
                                    isLValue: false,
                                    isPure: false,
                                    kind: "typeConversion",
                                    lValueRequested: false,
                                    nameLocations: [],
                                    names: [],
                                    nodeType: "FunctionCall",
                                    src: "3670:13:37",
                                    tryCall: false,
                                    typeDescriptions: {
                                      typeIdentifier: "t_address",
                                      typeString: "address",
                                    },
                                  },
                                ],
                                expression: {
                                  argumentTypes: [
                                    {
                                      typeIdentifier: "t_address",
                                      typeString: "address",
                                    },
                                    {
                                      typeIdentifier: "t_address",
                                      typeString: "address",
                                    },
                                  ],
                                  expression: {
                                    id: 46858,
                                    name: "stablecoin",
                                    nodeType: "Identifier",
                                    overloadedDeclarations: [],
                                    referencedDeclaration: 46688,
                                    src: "3637:10:37",
                                    typeDescriptions: {
                                      typeIdentifier:
                                        "t_contract$_ERC20_$43571",
                                      typeString: "contract ERC20",
                                    },
                                  },
                                  id: 46859,
                                  isConstant: false,
                                  isLValue: false,
                                  isPure: false,
                                  lValueRequested: false,
                                  memberLocation: "3648:9:37",
                                  memberName: "allowance",
                                  nodeType: "MemberAccess",
                                  referencedDeclaration: 43126,
                                  src: "3637:20:37",
                                  typeDescriptions: {
                                    typeIdentifier:
                                      "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                                    typeString:
                                      "function (address,address) view external returns (uint256)",
                                  },
                                },
                                id: 46866,
                                isConstant: false,
                                isLValue: false,
                                isPure: false,
                                kind: "functionCall",
                                lValueRequested: false,
                                nameLocations: [],
                                names: [],
                                nodeType: "FunctionCall",
                                src: "3637:47:37",
                                tryCall: false,
                                typeDescriptions: {
                                  typeIdentifier: "t_uint256",
                                  typeString: "uint256",
                                },
                              },
                              nodeType: "BinaryOperation",
                              operator: ">=",
                              rightExpression: {
                                id: 46867,
                                name: "totalFee",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: 46852,
                                src: "3688:8:37",
                                typeDescriptions: {
                                  typeIdentifier: "t_uint256",
                                  typeString: "uint256",
                                },
                              },
                              src: "3637:59:37",
                              typeDescriptions: {
                                typeIdentifier: "t_bool",
                                typeString: "bool",
                              },
                            },
                            {
                              hexValue:
                                "53656e646572206e6565647320746f20617070726f766520636f6e747261637420746f207370656e6420746f74616c2066656520616d6f756e74",
                              id: 46869,
                              isConstant: false,
                              isLValue: false,
                              isPure: true,
                              kind: "string",
                              lValueRequested: false,
                              nodeType: "Literal",
                              src: "3714:60:37",
                              typeDescriptions: {
                                typeIdentifier:
                                  "t_stringliteral_729265ece94b10297071027836f56b3eefca0c7eb7936122ba20aa74f31d7361",
                                typeString:
                                  'literal_string "Sender needs to approve contract to spend total fee amount"',
                              },
                              value:
                                "Sender needs to approve contract to spend total fee amount",
                            },
                          ],
                          expression: {
                            argumentTypes: [
                              {
                                typeIdentifier: "t_bool",
                                typeString: "bool",
                              },
                              {
                                typeIdentifier:
                                  "t_stringliteral_729265ece94b10297071027836f56b3eefca0c7eb7936122ba20aa74f31d7361",
                                typeString:
                                  'literal_string "Sender needs to approve contract to spend total fee amount"',
                              },
                            ],
                            id: 46857,
                            name: "require",
                            nodeType: "Identifier",
                            overloadedDeclarations: [-18, -18],
                            referencedDeclaration: -18,
                            src: "3612:7:37",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              typeString: "function (bool,string memory) pure",
                            },
                          },
                          id: 46870,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          kind: "functionCall",
                          lValueRequested: false,
                          nameLocations: [],
                          names: [],
                          nodeType: "FunctionCall",
                          src: "3612:176:37",
                          tryCall: false,
                          typeDescriptions: {
                            typeIdentifier: "t_tuple$__$",
                            typeString: "tuple()",
                          },
                        },
                        id: 46871,
                        nodeType: "ExpressionStatement",
                        src: "3612:176:37",
                      },
                      {
                        expression: {
                          arguments: [
                            {
                              commonType: {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                              id: 46882,
                              isConstant: false,
                              isLValue: false,
                              isPure: false,
                              lValueRequested: false,
                              leftExpression: {
                                arguments: [
                                  {
                                    expression: {
                                      id: 46875,
                                      name: "msg",
                                      nodeType: "Identifier",
                                      overloadedDeclarations: [],
                                      referencedDeclaration: -15,
                                      src: "3848:3:37",
                                      typeDescriptions: {
                                        typeIdentifier: "t_magic_message",
                                        typeString: "msg",
                                      },
                                    },
                                    id: 46876,
                                    isConstant: false,
                                    isLValue: false,
                                    isPure: false,
                                    lValueRequested: false,
                                    memberLocation: "3852:6:37",
                                    memberName: "sender",
                                    nodeType: "MemberAccess",
                                    src: "3848:10:37",
                                    typeDescriptions: {
                                      typeIdentifier: "t_address",
                                      typeString: "address",
                                    },
                                  },
                                ],
                                expression: {
                                  argumentTypes: [
                                    {
                                      typeIdentifier: "t_address",
                                      typeString: "address",
                                    },
                                  ],
                                  expression: {
                                    id: 46873,
                                    name: "stablecoin",
                                    nodeType: "Identifier",
                                    overloadedDeclarations: [],
                                    referencedDeclaration: 46688,
                                    src: "3827:10:37",
                                    typeDescriptions: {
                                      typeIdentifier:
                                        "t_contract$_ERC20_$43571",
                                      typeString: "contract ERC20",
                                    },
                                  },
                                  id: 46874,
                                  isConstant: false,
                                  isLValue: false,
                                  isPure: false,
                                  lValueRequested: false,
                                  memberLocation: "3838:9:37",
                                  memberName: "balanceOf",
                                  nodeType: "MemberAccess",
                                  referencedDeclaration: 43083,
                                  src: "3827:20:37",
                                  typeDescriptions: {
                                    typeIdentifier:
                                      "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                    typeString:
                                      "function (address) view external returns (uint256)",
                                  },
                                },
                                id: 46877,
                                isConstant: false,
                                isLValue: false,
                                isPure: false,
                                kind: "functionCall",
                                lValueRequested: false,
                                nameLocations: [],
                                names: [],
                                nodeType: "FunctionCall",
                                src: "3827:32:37",
                                tryCall: false,
                                typeDescriptions: {
                                  typeIdentifier: "t_uint256",
                                  typeString: "uint256",
                                },
                              },
                              nodeType: "BinaryOperation",
                              operator: ">=",
                              rightExpression: {
                                components: [
                                  {
                                    commonType: {
                                      typeIdentifier: "t_uint256",
                                      typeString: "uint256",
                                    },
                                    id: 46880,
                                    isConstant: false,
                                    isLValue: false,
                                    isPure: false,
                                    lValueRequested: false,
                                    leftExpression: {
                                      id: 46878,
                                      name: "mintFee",
                                      nodeType: "Identifier",
                                      overloadedDeclarations: [],
                                      referencedDeclaration: 46685,
                                      src: "3864:7:37",
                                      typeDescriptions: {
                                        typeIdentifier: "t_uint256",
                                        typeString: "uint256",
                                      },
                                    },
                                    nodeType: "BinaryOperation",
                                    operator: "*",
                                    rightExpression: {
                                      id: 46879,
                                      name: "quantity",
                                      nodeType: "Identifier",
                                      overloadedDeclarations: [],
                                      referencedDeclaration: 46794,
                                      src: "3874:8:37",
                                      typeDescriptions: {
                                        typeIdentifier: "t_uint256",
                                        typeString: "uint256",
                                      },
                                    },
                                    src: "3864:18:37",
                                    typeDescriptions: {
                                      typeIdentifier: "t_uint256",
                                      typeString: "uint256",
                                    },
                                  },
                                ],
                                id: 46881,
                                isConstant: false,
                                isInlineArray: false,
                                isLValue: false,
                                isPure: false,
                                lValueRequested: false,
                                nodeType: "TupleExpression",
                                src: "3863:20:37",
                                typeDescriptions: {
                                  typeIdentifier: "t_uint256",
                                  typeString: "uint256",
                                },
                              },
                              src: "3827:56:37",
                              typeDescriptions: {
                                typeIdentifier: "t_bool",
                                typeString: "bool",
                              },
                            },
                            {
                              hexValue:
                                "53656e64657220646f6573206e6f74206861766520656e6f75676820737461626c65636f696e20666f72206d696e74696e6720666565",
                              id: 46883,
                              isConstant: false,
                              isLValue: false,
                              isPure: true,
                              kind: "string",
                              lValueRequested: false,
                              nodeType: "Literal",
                              src: "3901:56:37",
                              typeDescriptions: {
                                typeIdentifier:
                                  "t_stringliteral_2c854a8f84888137a87c26fa92e48306bac2bb727d38f054619debbbd7404982",
                                typeString:
                                  'literal_string "Sender does not have enough stablecoin for minting fee"',
                              },
                              value:
                                "Sender does not have enough stablecoin for minting fee",
                            },
                          ],
                          expression: {
                            argumentTypes: [
                              {
                                typeIdentifier: "t_bool",
                                typeString: "bool",
                              },
                              {
                                typeIdentifier:
                                  "t_stringliteral_2c854a8f84888137a87c26fa92e48306bac2bb727d38f054619debbbd7404982",
                                typeString:
                                  'literal_string "Sender does not have enough stablecoin for minting fee"',
                              },
                            ],
                            id: 46872,
                            name: "require",
                            nodeType: "Identifier",
                            overloadedDeclarations: [-18, -18],
                            referencedDeclaration: -18,
                            src: "3802:7:37",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              typeString: "function (bool,string memory) pure",
                            },
                          },
                          id: 46884,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          kind: "functionCall",
                          lValueRequested: false,
                          nameLocations: [],
                          names: [],
                          nodeType: "FunctionCall",
                          src: "3802:169:37",
                          tryCall: false,
                          typeDescriptions: {
                            typeIdentifier: "t_tuple$__$",
                            typeString: "tuple()",
                          },
                        },
                        id: 46885,
                        nodeType: "ExpressionStatement",
                        src: "3802:169:37",
                      },
                      {
                        body: {
                          id: 46900,
                          nodeType: "Block",
                          src: "4024:49:37",
                          statements: [
                            {
                              expression: {
                                arguments: [
                                  {
                                    id: 46897,
                                    name: "_recipient",
                                    nodeType: "Identifier",
                                    overloadedDeclarations: [],
                                    referencedDeclaration: 46792,
                                    src: "4047:10:37",
                                    typeDescriptions: {
                                      typeIdentifier: "t_address",
                                      typeString: "address",
                                    },
                                  },
                                ],
                                expression: {
                                  argumentTypes: [
                                    {
                                      typeIdentifier: "t_address",
                                      typeString: "address",
                                    },
                                  ],
                                  id: 46896,
                                  name: "mint",
                                  nodeType: "Identifier",
                                  overloadedDeclarations: [],
                                  referencedDeclaration: 46789,
                                  src: "4042:4:37",
                                  typeDescriptions: {
                                    typeIdentifier:
                                      "t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$",
                                    typeString:
                                      "function (address) returns (uint256)",
                                  },
                                },
                                id: 46898,
                                isConstant: false,
                                isLValue: false,
                                isPure: false,
                                kind: "functionCall",
                                lValueRequested: false,
                                nameLocations: [],
                                names: [],
                                nodeType: "FunctionCall",
                                src: "4042:16:37",
                                tryCall: false,
                                typeDescriptions: {
                                  typeIdentifier: "t_uint256",
                                  typeString: "uint256",
                                },
                              },
                              id: 46899,
                              nodeType: "ExpressionStatement",
                              src: "4042:16:37",
                            },
                          ],
                        },
                        condition: {
                          commonType: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                          id: 46892,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftExpression: {
                            id: 46890,
                            name: "i",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 46887,
                            src: "4005:1:37",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          nodeType: "BinaryOperation",
                          operator: "<",
                          rightExpression: {
                            id: 46891,
                            name: "quantity",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 46794,
                            src: "4009:8:37",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          src: "4005:12:37",
                          typeDescriptions: {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                        },
                        id: 46901,
                        initializationExpression: {
                          assignments: [46887],
                          declarations: [
                            {
                              constant: false,
                              id: 46887,
                              mutability: "mutable",
                              name: "i",
                              nameLocation: "3998:1:37",
                              nodeType: "VariableDeclaration",
                              scope: 46901,
                              src: "3990:9:37",
                              stateVariable: false,
                              storageLocation: "default",
                              typeDescriptions: {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                              typeName: {
                                id: 46886,
                                name: "uint256",
                                nodeType: "ElementaryTypeName",
                                src: "3990:7:37",
                                typeDescriptions: {
                                  typeIdentifier: "t_uint256",
                                  typeString: "uint256",
                                },
                              },
                              visibility: "internal",
                            },
                          ],
                          id: 46889,
                          initialValue: {
                            hexValue: "30",
                            id: 46888,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            kind: "number",
                            lValueRequested: false,
                            nodeType: "Literal",
                            src: "4002:1:37",
                            typeDescriptions: {
                              typeIdentifier: "t_rational_0_by_1",
                              typeString: "int_const 0",
                            },
                            value: "0",
                          },
                          nodeType: "VariableDeclarationStatement",
                          src: "3990:13:37",
                        },
                        loopExpression: {
                          expression: {
                            id: 46894,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            lValueRequested: false,
                            nodeType: "UnaryOperation",
                            operator: "++",
                            prefix: false,
                            src: "4019:3:37",
                            subExpression: {
                              id: 46893,
                              name: "i",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 46887,
                              src: "4019:1:37",
                              typeDescriptions: {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                            },
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          id: 46895,
                          nodeType: "ExpressionStatement",
                          src: "4019:3:37",
                        },
                        nodeType: "ForStatement",
                        src: "3985:88:37",
                      },
                      {
                        expression: {
                          arguments: [
                            {
                              expression: {
                                id: 46905,
                                name: "msg",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: -15,
                                src: "4110:3:37",
                                typeDescriptions: {
                                  typeIdentifier: "t_magic_message",
                                  typeString: "msg",
                                },
                              },
                              id: 46906,
                              isConstant: false,
                              isLValue: false,
                              isPure: false,
                              lValueRequested: false,
                              memberLocation: "4114:6:37",
                              memberName: "sender",
                              nodeType: "MemberAccess",
                              src: "4110:10:37",
                              typeDescriptions: {
                                typeIdentifier: "t_address",
                                typeString: "address",
                              },
                            },
                            {
                              arguments: [],
                              expression: {
                                argumentTypes: [],
                                id: 46907,
                                name: "owner",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: 42893,
                                src: "4122:5:37",
                                typeDescriptions: {
                                  typeIdentifier:
                                    "t_function_internal_view$__$returns$_t_address_$",
                                  typeString:
                                    "function () view returns (address)",
                                },
                              },
                              id: 46908,
                              isConstant: false,
                              isLValue: false,
                              isPure: false,
                              kind: "functionCall",
                              lValueRequested: false,
                              nameLocations: [],
                              names: [],
                              nodeType: "FunctionCall",
                              src: "4122:7:37",
                              tryCall: false,
                              typeDescriptions: {
                                typeIdentifier: "t_address",
                                typeString: "address",
                              },
                            },
                            {
                              id: 46909,
                              name: "totalFee",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 46852,
                              src: "4131:8:37",
                              typeDescriptions: {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                            },
                          ],
                          expression: {
                            argumentTypes: [
                              {
                                typeIdentifier: "t_address",
                                typeString: "address",
                              },
                              {
                                typeIdentifier: "t_address",
                                typeString: "address",
                              },
                              {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                            ],
                            expression: {
                              id: 46902,
                              name: "stablecoin",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 46688,
                              src: "4086:10:37",
                              typeDescriptions: {
                                typeIdentifier: "t_contract$_ERC20_$43571",
                                typeString: "contract ERC20",
                              },
                            },
                            id: 46904,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            lValueRequested: false,
                            memberLocation: "4097:12:37",
                            memberName: "transferFrom",
                            nodeType: "MemberAccess",
                            referencedDeclaration: 43184,
                            src: "4086:23:37",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              typeString:
                                "function (address,address,uint256) external returns (bool)",
                            },
                          },
                          id: 46910,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          kind: "functionCall",
                          lValueRequested: false,
                          nameLocations: [],
                          names: [],
                          nodeType: "FunctionCall",
                          src: "4086:54:37",
                          tryCall: false,
                          typeDescriptions: {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                        },
                        id: 46911,
                        nodeType: "ExpressionStatement",
                        src: "4086:54:37",
                      },
                    ],
                  },
                  id: 46913,
                  nodeType: "IfStatement",
                  src: "3400:751:37",
                  trueBody: {
                    id: 46850,
                    nodeType: "Block",
                    src: "3429:112:37",
                    statements: [
                      {
                        body: {
                          id: 46848,
                          nodeType: "Block",
                          src: "3482:49:37",
                          statements: [
                            {
                              expression: {
                                arguments: [
                                  {
                                    id: 46845,
                                    name: "_recipient",
                                    nodeType: "Identifier",
                                    overloadedDeclarations: [],
                                    referencedDeclaration: 46792,
                                    src: "3505:10:37",
                                    typeDescriptions: {
                                      typeIdentifier: "t_address",
                                      typeString: "address",
                                    },
                                  },
                                ],
                                expression: {
                                  argumentTypes: [
                                    {
                                      typeIdentifier: "t_address",
                                      typeString: "address",
                                    },
                                  ],
                                  id: 46844,
                                  name: "mint",
                                  nodeType: "Identifier",
                                  overloadedDeclarations: [],
                                  referencedDeclaration: 46789,
                                  src: "3500:4:37",
                                  typeDescriptions: {
                                    typeIdentifier:
                                      "t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$",
                                    typeString:
                                      "function (address) returns (uint256)",
                                  },
                                },
                                id: 46846,
                                isConstant: false,
                                isLValue: false,
                                isPure: false,
                                kind: "functionCall",
                                lValueRequested: false,
                                nameLocations: [],
                                names: [],
                                nodeType: "FunctionCall",
                                src: "3500:16:37",
                                tryCall: false,
                                typeDescriptions: {
                                  typeIdentifier: "t_uint256",
                                  typeString: "uint256",
                                },
                              },
                              id: 46847,
                              nodeType: "ExpressionStatement",
                              src: "3500:16:37",
                            },
                          ],
                        },
                        condition: {
                          commonType: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                          id: 46840,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftExpression: {
                            id: 46838,
                            name: "i",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 46835,
                            src: "3463:1:37",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          nodeType: "BinaryOperation",
                          operator: "<",
                          rightExpression: {
                            id: 46839,
                            name: "quantity",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 46794,
                            src: "3467:8:37",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          src: "3463:12:37",
                          typeDescriptions: {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                        },
                        id: 46849,
                        initializationExpression: {
                          assignments: [46835],
                          declarations: [
                            {
                              constant: false,
                              id: 46835,
                              mutability: "mutable",
                              name: "i",
                              nameLocation: "3456:1:37",
                              nodeType: "VariableDeclaration",
                              scope: 46849,
                              src: "3448:9:37",
                              stateVariable: false,
                              storageLocation: "default",
                              typeDescriptions: {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                              typeName: {
                                id: 46834,
                                name: "uint256",
                                nodeType: "ElementaryTypeName",
                                src: "3448:7:37",
                                typeDescriptions: {
                                  typeIdentifier: "t_uint256",
                                  typeString: "uint256",
                                },
                              },
                              visibility: "internal",
                            },
                          ],
                          id: 46837,
                          initialValue: {
                            hexValue: "30",
                            id: 46836,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            kind: "number",
                            lValueRequested: false,
                            nodeType: "Literal",
                            src: "3460:1:37",
                            typeDescriptions: {
                              typeIdentifier: "t_rational_0_by_1",
                              typeString: "int_const 0",
                            },
                            value: "0",
                          },
                          nodeType: "VariableDeclarationStatement",
                          src: "3448:13:37",
                        },
                        loopExpression: {
                          expression: {
                            id: 46842,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            lValueRequested: false,
                            nodeType: "UnaryOperation",
                            operator: "++",
                            prefix: false,
                            src: "3477:3:37",
                            subExpression: {
                              id: 46841,
                              name: "i",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 46835,
                              src: "3477:1:37",
                              typeDescriptions: {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                            },
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          id: 46843,
                          nodeType: "ExpressionStatement",
                          src: "3477:3:37",
                        },
                        nodeType: "ForStatement",
                        src: "3443:88:37",
                      },
                    ],
                  },
                },
                {
                  expression: {
                    id: 46914,
                    name: "quantity",
                    nodeType: "Identifier",
                    overloadedDeclarations: [],
                    referencedDeclaration: 46794,
                    src: "4168:8:37",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  functionReturnParameters: 46798,
                  id: 46915,
                  nodeType: "Return",
                  src: "4161:15:37",
                },
              ],
            },
            documentation: {
              id: 46790,
              nodeType: "StructuredDocumentation",
              src: "2742:323:37",
              text: " @dev Mints multiple tokens and sends fee amount to owner.\n The sender must have an adequate balance of stablecoin to pay the fee. minting\n should not push the total tokens minted above the max token supply.\n @param _recipient The address of the account that will receive the minted NFT.",
            },
            functionSelector: "b3fa4a4c",
            implemented: true,
            kind: "function",
            modifiers: [],
            name: "mintMultiple",
            nameLocation: "3079:12:37",
            parameters: {
              id: 46795,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 46792,
                  mutability: "mutable",
                  name: "_recipient",
                  nameLocation: "3100:10:37",
                  nodeType: "VariableDeclaration",
                  scope: 46917,
                  src: "3092:18:37",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                  typeName: {
                    id: 46791,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "3092:7:37",
                    stateMutability: "nonpayable",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 46794,
                  mutability: "mutable",
                  name: "quantity",
                  nameLocation: "3120:8:37",
                  nodeType: "VariableDeclaration",
                  scope: 46917,
                  src: "3112:16:37",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 46793,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "3112:7:37",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "3091:38:37",
            },
            returnParameters: {
              id: 46798,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 46797,
                  mutability: "mutable",
                  name: "",
                  nameLocation: "-1:-1:-1",
                  nodeType: "VariableDeclaration",
                  scope: 46917,
                  src: "3148:7:37",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 46796,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "3148:7:37",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "3147:9:37",
            },
            scope: 46931,
            stateMutability: "nonpayable",
            virtual: false,
            visibility: "external",
          },
          {
            id: 46930,
            nodeType: "FunctionDefinition",
            src: "4260:106:37",
            nodes: [],
            body: {
              id: 46929,
              nodeType: "Block",
              src: "4311:55:37",
              nodes: [],
              statements: [
                {
                  expression: {
                    commonType: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    id: 46927,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      id: 46923,
                      name: "maxSupply",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 46690,
                      src: "4328:9:37",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "BinaryOperation",
                    operator: "-",
                    rightExpression: {
                      arguments: [],
                      expression: {
                        argumentTypes: [],
                        expression: {
                          id: 46924,
                          name: "_tokenIds",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 46697,
                          src: "4340:9:37",
                          typeDescriptions: {
                            typeIdentifier: "t_struct$_Counter_$45364_storage",
                            typeString: "struct Counters.Counter storage ref",
                          },
                        },
                        id: 46925,
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        memberLocation: "4350:7:37",
                        memberName: "current",
                        nodeType: "MemberAccess",
                        referencedDeclaration: 45376,
                        src: "4340:17:37",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_internal_view$_t_struct$_Counter_$45364_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$45364_storage_ptr_$",
                          typeString:
                            "function (struct Counters.Counter storage pointer) view returns (uint256)",
                        },
                      },
                      id: 46926,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      nameLocations: [],
                      names: [],
                      nodeType: "FunctionCall",
                      src: "4340:19:37",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    src: "4328:31:37",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  functionReturnParameters: 46922,
                  id: 46928,
                  nodeType: "Return",
                  src: "4321:38:37",
                },
              ],
            },
            documentation: {
              id: 46918,
              nodeType: "StructuredDocumentation",
              src: "4189:66:37",
              text: " @dev Get remaining unclaimed NFTs left to mint.",
            },
            functionSelector: "669416b8",
            implemented: true,
            kind: "function",
            modifiers: [],
            name: "unclaimed",
            nameLocation: "4269:9:37",
            parameters: {
              id: 46919,
              nodeType: "ParameterList",
              parameters: [],
              src: "4278:2:37",
            },
            returnParameters: {
              id: 46922,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 46921,
                  mutability: "mutable",
                  name: "",
                  nameLocation: "-1:-1:-1",
                  nodeType: "VariableDeclaration",
                  scope: 46930,
                  src: "4302:7:37",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 46920,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "4302:7:37",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "4301:9:37",
            },
            scope: 46931,
            stateMutability: "view",
            virtual: false,
            visibility: "public",
          },
        ],
        abstract: false,
        baseContracts: [
          {
            baseName: {
              id: 46676,
              name: "ERC721Royalty",
              nameLocations: ["619:13:37"],
              nodeType: "IdentifierPath",
              referencedDeclaration: 44781,
              src: "619:13:37",
            },
            id: 46677,
            nodeType: "InheritanceSpecifier",
            src: "619:13:37",
          },
          {
            baseName: {
              id: 46678,
              name: "Ownable",
              nameLocations: ["634:7:37"],
              nodeType: "IdentifierPath",
              referencedDeclaration: 42965,
              src: "634:7:37",
            },
            id: 46679,
            nodeType: "InheritanceSpecifier",
            src: "634:7:37",
          },
        ],
        canonicalName: "AlgoBull",
        contractDependencies: [],
        contractKind: "contract",
        documentation: {
          id: 46675,
          nodeType: "StructuredDocumentation",
          src: "316:281:37",
          text: " @dev AlgoBull NFT Minting Contract that implements the following properties:\n - Fixed Stablecoin fee per 1 mint.\n - Fixed Supply.\n - Mint multiple NFTs.\n - Apply royalties via ERC2981.\n - Support a dev wallet's ability to waive minting fees up to a set amount.",
        },
        fullyImplemented: true,
        linearizedBaseContracts: [
          46931, 42965, 44781, 44601, 44808, 44717, 45006, 45685, 42984, 45697,
          45358,
        ],
        name: "AlgoBull",
        nameLocation: "607:8:37",
        scope: 46932,
        usedErrors: [],
      },
    ],
  },
  id: 37,
};
